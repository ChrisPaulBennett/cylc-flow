# THIS IS A SEQUENZ TASK CLASS DEFINITION FILE
# See full_template.def for documented entries

%NAME

    foo

%TYPE
    # sequential: consecutive instances may not overlap, e.g. forecast
    #             models, so abdicate after previous instance finished
    # parallel: consecutive instance may overlap, so abdicate when
    #             previous instance starts running
    # contact: tasks with no prerequisites that wait on external events

    sequential

%OWNER
    # what username to run the task as.
    # defaults to sequenz owner if unspecified.
    # EcoConnect: user the oper username (e.g. hydrology_oper)

    bob

%VALID_HOURS
    # comma separated hours in the day valid for this task type

    0,6,12,18

%EXTERNAL_TASK
    # external program or script to invoke when all of my prerequisites
    # have been satisfied

    run-foo.sh

%RUN_LENGTH_MINUTES
    # Estimated run length in minutes, used in dummy mode.
    # May be conditional on valid hours, as for %PREREQUISITES.

           20
    0,12 | 25
    6,18 | 35

%PREREQUISITES
    # zero or more prerequisite messages, on separate lines

    # These are LITERAL STRINGS, with some from variable substitution:
    #  1. $(MY_REFERENCE_TIME)
    #  2. $(MY_REFERENCE_TIME - <hours>)

    # May be conditional on a comma separated list of %VALID_HOURS

           foo finished for $(MY_REFERENCE_TIME)
           file bar_$(MY_REFERENCE_TIME)_utc.nc ready
    0,12 | file baz_$(MY_REFERENCE_TIME)_utc.nc ready

%OUTPUTS
    # List of all output messages that are important for task scheduling
    # purposes (i.e. that other tasks may depend on through their
    # prerequisites), prefixed by the approximate time in minutes that
    # the output is completed (the time is used in dummy mode).

    # These are LITERAL STRINGS, with some from variable substitution:
    #  1. $(NAME) 
    #  2. $(MY_REFERENCE_TIME)
    #  3. $(MY_REFERENCE_TIME - <hours>)

    # Do not add task 'started' and 'finished' messages, these are
    # generated automatically according to the estimated run length:
    #   0: $(NAME) started for $(MY_REFERENCE_TIME)
    #   <%RUN_LENGTH_MINUTES>: $(NAME) finished for $(MY_REFERENCE_TIME)
    # Other tasks may depend on these automatically supplied outputs.

    # May be conditional on %VALID_HOURS as for prerequisites.

           10: file foo_0_$(MY_REFERENCE_TIME).nc ready
    0,12 | 15: file foo_1_$(MY_REFERENCE_TIME).nc ready
    6,18 | 15: file foo_2_$(MY_REFERENCE_TIME).nc ready


%DELAYED_DEATH 
    # THIS KEY IS OPTIONAL and defaults to 'False'.  

    # Tasks that have only cotemporal downstream dependents can be
    # deleted as soon as they are finished AND there are no other tasks
    # yet to be finished at their reference time or earlier. Set this
    # key 'True' for tasks that have downstream dependents in OTHER
    # FORECAST CYCLES. These will be deleted only when the cutoff time
    # specified by their dependents is reached.

    True

%EXPORT
    # THIS KEY IS OPTIONAL
    # specify additional environment variable name value pairs to pass
    # to the external task (other than $MY_REFERENCE_TIME and $NAME).

    FOO foo
    BAR bar
