#!/bin/bash

#C: THIS FILE IS PART OF THE CYLC SUITE ENGINE.
#C: Copyright (C) 2008-2014 Hilary Oliver, NIWA
#C:
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

N=4

usage() {
  cat <<eof
USAGE: cylc test-battery [OPTIONS] [SUBSET]

Run a battery of tests held under \$CYLC_DIR/tests/[SUBSET].

Some tests (e.g. those specific to particular batch schedulers) can be
configured in your site/user config file. A few others still submit jobs
to a user@host account taken from the environment:
  \$CYLC_TEST_TASK_HOST # default localhost
  \$CYLC_TEST_TASK_OWNER # defaut \$USER
Passwordless ssh must be configured to task host accounts.

Suite run directories are cleaned up on the suite host (but not on
remote task hosts) for passing tests - otherwise they are left alone.

By default $N tests are run at once, in parallel. On slow or loaded
machines this may result in some test failures due to timeouts intended
to catch problems that can prevent a suite from shutting down normally.
Use the "-j N" option to change the amount of concurrency.

For more information see "Reference Tests" in the User Guide.

Options:
  -h, --help   Print this help message and exit.
Other options are passed through to "prove", e.g.:
  -j N         Run N tests at once, in parallel (default $N).
eof
}

# handle long --help
if [[ $@ == *\-\-help ]]; then
    usage
    exit 0
fi

cd $CYLC_DIR/tests

if (($# == 0)); then
    ARGS=""
else
    ARGS="$@"
fi

if perl -e 'use Test::Harness 3.00' 2>/dev/null; then
    exec prove -j $N -r -s $ARGS
else
    echo "WARNING: cannot run tests in parallel (Test::Harness < 3.00)" >&2
    exec prove -r -s $ARGS
fi

