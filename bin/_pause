#!/usr/bin/env python

import os, sys
import cycle_time
import cylc_pyro_client
from CylcOptionParsers import PromptOptionParser
from port_scan import SuiteIdentificationError

parser = PromptOptionParser( """cylc [control] pause [options] SUITE [CYCLE]

Refrain from submitting any new tasks that are ready to run,
immediately, or once each task passes a given cycle time.""",
["[CYCLE]              Cycle time (YYYYMMDDHH) after which to pause."])

(options, args) = parser.parse_args()

if len( args ) == 2:
    pause_at = True
    pause_time = args[1]
    if not cycle_time.is_valid( pause_time ):
        parser.error( "invalid cycle time: " + pause_time )
else: 
    # parsing catches other errors
    pause_at = False

suite = parser.get_suite_name()

try:
    proxy = cylc_pyro_client.client( suite ).get_proxy( 'remote' )
except SuiteIdentificationError, x:
    raise SystemExit(x)

if pause_at:
    if not parser.prompt( 'Pause at ' + pause_time + ' for'):
        sys.exit(0)
    result = proxy.set_hold_time( pause_time )
else:
    if not parser.prompt( 'Pause now' ):
        sys.exit(0)
    result = proxy.hold()

if result.success:
    print result.reason
else:
    print 'ERROR:', result.reason
    sys.exit(1)
