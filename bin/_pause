#!/usr/bin/env python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|


import os, sys
import cycle_time
import cylc_pyro_client
import Pyro.errors
from CylcOptionParsers import PromptOptionParser

parser = PromptOptionParser( """cylc pause [options] SUITE [CYCLE]

Refrain from submitting any new tasks that are ready to run,
immediately, or once each task passes a given cycle time.""",
["[CYCLE]              Cycle time (YYYYMMDDHH) after which to pause."])

(options, args) = parser.parse_args()

if len( args ) == 2:
    pause_at = True
    pause_time = args[1]
    if not cycle_time.is_valid( pause_time ):
        parser.error( "invalid cycle time: " + pause_time )
else: 
    # parsing catches other errors
    pause_at = False

suite = parser.get_suite_name()
owner = os.environ['USER']
host = options.host
port = options.port

try:
    proxy = cylc_pyro_client.client( suite, owner, host, port ).get_proxy( 'remote' )
    if pause_at:
        if not parser.prompt( 'Pause at ' + pause_time + ' for'):
            sys.exit(0)
        actioned, explanation = proxy.set_hold_time( pause_time, owner )
    else:
        if not parser.prompt( 'Pause now' ):
            sys.exit(0)
        actioned, explanation = proxy.hold( owner )
    print explanation

except Pyro.errors.NamingError, x:
    if options.debug:
        raise
    else:
        print x
        sys.exit(1)

if not actioned:
    sys.exit(1)
