#!/usr/bin/env python

import os, sys
import cycle_time
import cylc_pyro_client
from CylcOptionParsers import PromptOptionParser
from port_scan import SuiteIdentificationError
from CylcError import CylcError

parser = PromptOptionParser( """cylc trigger [options] SUITE TASK

Force a task to trigger immediately (unless the suite is paused, 
in which case it will trigger when normal operation is resumed).
This is just a special case of the 'reset' command.

See also:
   cylc reset
   cylc pause
   cylc resume""",
[ 'TASK              NAME%YYYYMMDDHH - the task to trigger.'] )

(options, args) = parser.parse_args()

if len(args) != 2:
    parser.error( "Suite name and task ID required." )

task_id = args[1]

try:
    (name, cycle ) = task_id.split('%')
except ValueError:
    parser.error( "Task or Group ID must be NAME%YYYYMMDDHH")

if not cycle_time.is_valid( cycle ):
    parser.error( "invalid cycle time: " + cycle )

suite = parser.get_suite_name()
owner = os.environ['USER']
host = options.host
port = options.port

try:
    proxy = cylc_pyro_client.client( suite, owner, host, port ).get_proxy( 'remote' )
except SuiteIdentificationError, x:
    raise SystemExit(x)

if not parser.prompt( 'Trigger task ' + task_id + ' in'):
    sys.exit(0)

result = proxy.reset_task_state( task_id, 'ready' )

if result.success:
    print result.reason
else:
    print 'ERROR:', result.reason
    sys.exit(1)
