#!/usr/bin/env python

# THIS FILE IS PART OF THE CYLC SUITE ENGINE.
# Copyright (C) 2008-2016 NIWA
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""cylc [info] cat-state [OPTIONS] REG

Print the suite state dump file directly to stdout."""

import sys
from cylc.remote import remrun
if remrun().execute():
    sys.exit(0)

import cylc.flags
from cylc.CylcOptionParsers import cop
from cylc.dump import dump_to_stdout, get_stop_state_summary
from cylc.suite_state_dumping import SuiteStateDumper


def main():
    parser = cop(__doc__)

    parser.add_option(
        "-d", "--dump",
        help="Use the same display format as the 'cylc dump' command.",
        action="store_true", default=False, dest="dumpform")

    (options, args) = parser.parse_args()
    suite = args[0]

    owner = options.db_owner
    f = open(SuiteStateDumper(suite).file_name, 'rb')
    lines = f.readlines()
    f.close()

    lines = map(str.rstrip, lines)

    if not options.dumpform:
        for line in lines:
            print line
    else:
        [glbl, states, fam_states] = get_stop_state_summary(
            suite, options.owner, options.host, lines)
        dump_to_stdout(states)


if __name__ == "__main__":
    try:
        main()
    except Exception as exc:
        if cylc.flags.debug:
            raise
        sys.exit(str(exc))
