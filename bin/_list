#!/usr/bin/env python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|

import os, sys
from registration import registrations
from optparse import OptionParser
from config import config

parser = OptionParser( """cylc list [options] SUITE

Print the title, description, and task list, of a registered suite
(which does not need to be running). This command parses the 
suite.rc config file, which allows you to check the file's validity
without running the suite.""" )

parser.add_option( "-a", "--all", help="print all information "
        "(by default just the task list is printed).",
        action="store_true", default=False, dest="print_all" )

parser.add_option( "-o", "--owner", help="suite owner (default $USER).",
        metavar='USERNAME', action="store", default=os.environ['USER'], 
        dest="owner" )

(options, args) = parser.parse_args()

if len(args) != 1:
    parser.error( "Wrong number or arguments" )
else:
    suite = args[0]

# find location of the suite task and config modules
reg = registrations( options.owner )
if reg.is_registered( suite ):
    suite_dir = reg.get( suite )
    if options.print_all:
        print 'REGISTRATION:'
        reg.print_reg( suite )
else:
    print >> sys.stderr, "ERROR: suite " + suite + " is not registered"
    reg.print_all()
    sys.exit(1)

# load suite configuration
config = config( os.path.join( suite_dir, 'suite.rc' ))

if options.print_all:
    print 'TITLE:'
    print config.get_title()
    print 'DESCRIPTION:'
    print config.get_description()
    print 'TASK LIST:'
for task in config.get_task_name_list():
    print ' ', task
