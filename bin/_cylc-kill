#!/usr/bin/python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|

import os
import cycle_time
from connector import connector
from CylcOptionParsers import PromptOptionParser

parser = PromptOptionParser( """cylc kill [options] SYSTEM 

Delete task proxy objects from a running scheduler. 

The target tasks will be forced to spawn successors first, if they
haven't done so already, unless you use the '--no-spawn' option. 

WARNING: THIS COMMAND IS DANGEROUS, but if necessary you can restart
the system from the automatic pre-kill state dump (see the main log).""" )

parser.add_option( "-t", "--task-id",
        help="Identity of the task to kill.",
        metavar="NAME%CYCLE", action="store", dest="kill_id" )

parser.add_option( "-c", "--cycle",
        help="Kill all tasks currently at this cycle time.",
        metavar="CYCLE", action="store", dest="kill_cycle" )

parser.add_option( "--no-spawn", 
        help="Do not spawn successors before dying.",
        action="store_true", default=False, dest="no_spawn" )

(options, args) = parser.parse_args()

if not options.kill_id and not options.kill_cycle:
    parser.error( "Task identity or cycle time required" )

god = connector( parser.get_pns_host(), parser.get_groupname(), 'remote' ).get()
 
if options.kill_cycle:
    cycle = options.kill_cycle
    if not cycle_time.is_valid( cycle ):
        parser.error( "invalid cycle time: " + cycle )

    if parser.prompt( 'Kill ALL tasks in ' + cycle ):
        if options.no_spawn:
            print god.die_cycle( cycle, os.environ['USER'] )
        else:
            print god.spawn_and_die_cycle( cycle, os.environ['USER'] )

if options.kill_id:
    target = options.kill_id  
    ( name, cycle ) = target.split('%')
    if not cycle_time.is_valid( cycle ):
        parser.error( "invalid cycle time: " + cycle )

    if parser.prompt( 'Kill task ' + target + ' in'):
        if options.no_spawn:
            print god.die( target, os.environ['USER'] )
        else:
            print god.spawn_and_die( target, os.environ['USER'] )
