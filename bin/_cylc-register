#!/bin/bash

set -e  # ABORT on error

function print_usage() 
{
	echo "Usage: cylc register [options] SYSTEM"
    echo ""
    echo "Register a configured system for use under a given name. This simply"
    echo "stores an associatiation between the name and the system definition" 
    echo "directory under \$HOME/.cylc/registered. A single system can be"
    echo "registered for use under multiple names (see the userguide)."
    echo ""
    echo "arguments:"
    echo "   SYSTEM      Name under which to register the configured system."
    echo ""
    echo "options:"
    echo "  -h, --help   Print this usage message and exit"
    echo "  -d PATH      (REQUIRED) Location of the system definition directory."
    echo "  -p           Print current system name registrations."
    echo "  -f           Force: overwrite an existing name registration."
}

# cheap hack to get '--help', which isn't allowed by getopts
if [[ $1 == '--help' ]]; then
    print_usage
    exit 0
fi

# create the registration directory
REG_DIR=$HOME/.cylc/registered
[[ ! -d $REG_DIR ]] && mkdir -p $REG_DIR

FORCE=false
PRINT=false
SYSDIR_GIVEN=false
while getopts "hpfd:" opt; do
    case $opt in
        h)
        print_usage
        exit 0
        ;;
        p)
        PRINT=true
        ;;
        d)
        SYSDIR_GIVEN=true
        SYSDIR=$OPTARG
        ;;
        f)
        FORCE=true
        ;;
        *)
        exit 1
        ;;
    esac
done

shift $(( OPTIND -1 ))

if [[ $# == 0 ]] && $PRINT; then
    # print current registrations and exit

    # go to user registration directory
    cd $REG_DIR
    # how many systems registered?
    N_REG=$( ls -1 | wc -l )
    echo "You have $N_REG systems registered"
    [[ $N_REG == 0 ]] && exit 0

    # print each registered system
    COUNT=0
    for xSYSNAME in *; do 
        COUNT=$((COUNT + 1 ))
        xSYSDIR=$( cat $xSYSNAME )
        echo "[${COUNT}] ${xSYSNAME}: $xSYSDIR"
    done
    exit 0
fi

if [[ $# != 1 ]]; then
    echo "ERROR: system registration name required!"
    exit 1
fi

SYSNAME=$1

if ! $SYSDIR_GIVEN; then
    echo "ERROR: location of system definition is required (-d PATH)"
    exit 1
fi

# absolute path to system definition dir
if [[ $SYSDIR != /* ]]; then
    SYSDIR=$PWD/$SYSDIR
    # remove trailing '/'
    SYSDIR=${SYSDIR%/}
fi

# check the new system has been configured
! _cylc-is-configured $SYSDIR && exit 1

# is the system already registered?
if [[ -f $REG_DIR/$SYSNAME ]]; then
    TO=$( cat $REG_DIR/$SYSNAME )
    if [[ $TO = $SYSDIR ]]; then
        # already registered as requested
        echo "ALREADY REGISTERED: $SYSNAME -> $SYSDIR"
        exit 0
    else
        # already registered for access to another system
        if ! $FORCE; then
            echo "ALREADY REGISTERED: $SYSNAME -> $TO"
            echo "Use the '-f' option to re-register"
            exit 1
        fi # else continue on to the reg code below
    fi
fi
    
# register the system
echo $SYSDIR > $REG_DIR/$SYSNAME
echo "NEW: $SYSNAME -> $SYSDIR"
