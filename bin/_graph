#!/usr/bin/env python

import os
import sys
import gtk
import gtk.gdk
import gobject
from optparse import OptionParser

try:
    from graphing import xdot
    from graphing import pygraphviz
except:
    raise SystemExit( "Graphing not available; install pygraphviz and xdot")

import config

class MyDotWindow( xdot.DotWindow ):
    # override xdot to get rid of Open and Refresh
    # and load graph from suite config
    ui = '''
    <ui>
        <toolbar name="ToolBar">
            <toolitem action="ZoomIn"/>
            <toolitem action="ZoomOut"/>
            <toolitem action="ZoomFit"/>
            <toolitem action="Zoom100"/>
        </toolbar>
    </ui>
    '''
    def __init__(self):
        gtk.Window.__init__(self)

        self.graph = xdot.Graph()

        window = self

        window.set_title('Suite Dependency Graph Viewer')
        window.set_default_size(512, 512)
        vbox = gtk.VBox()
        window.add(vbox)

        self.widget = xdot.DotWidget()

        # Create a UIManager instance
        uimanager = self.uimanager = gtk.UIManager()

        # Add the accelerator group to the toplevel window
        accelgroup = uimanager.get_accel_group()
        window.add_accel_group(accelgroup)

        # Create an ActionGroup
        actiongroup = gtk.ActionGroup('Actions')
        self.actiongroup = actiongroup

        # Create actions
        actiongroup.add_actions((
            ('ZoomIn', gtk.STOCK_ZOOM_IN, None, None, None, self.widget.on_zoom_in),
            ('ZoomOut', gtk.STOCK_ZOOM_OUT, None, None, None, self.widget.on_zoom_out),
            ('ZoomFit', gtk.STOCK_ZOOM_FIT, None, None, None, self.widget.on_zoom_fit),
            ('Zoom100', gtk.STOCK_ZOOM_100, None, None, None, self.widget.on_zoom_100),
        ))

        # Add the actiongroup to the uimanager
        uimanager.insert_action_group(actiongroup, 0)

        # Add a UI descrption
        uimanager.add_ui_from_string(self.ui)

        # Create a Toolbar
        toolbar = uimanager.get_widget('/ToolBar')
        vbox.pack_start(toolbar, False)

        vbox.pack_start(self.widget)

        self.set_focus(self.widget)

        self.show_all()

    def set_suite( self, suite ):
        #print 'ullo'
        self.suite = suite
        foo = config.config( suite )
        self.suite_file = foo.get_filename()
        bar = foo.get_coldstart_graphs()
        dotcode = bar[0].string()
        self.set_dotcode( dotcode )

    def update(self):
        if not hasattr(self, "last_mtime"):
            self.last_mtime = None
        current_mtime = os.stat(self.suite_file).st_mtime
        if current_mtime != self.last_mtime:
            self.last_mtime = current_mtime
            self.set_suite(self.suite)
        return True

def main():
    parser = OptionParser( """cylc graph SUITE 

View a graphical suite dependency graph that updates as you 
edit the suite.

Arguments:
  SUITE   - registered name of the suite.""")

    ( options, args ) = parser.parse_args()

    if len(args) != 1:
        parser.error( "wrong number of arguments" )

    suite = args[0]


    window = MyDotWindow()
    window.set_suite( suite )
    window.connect( 'destroy', gtk.main_quit)
    gobject.timeout_add(1000, window.update)
    gtk.main()

if __name__ == '__main__':
    main()
