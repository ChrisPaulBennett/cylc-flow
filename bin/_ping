#!/usr/bin/env python

import os, sys, re
import socket
from optparse import OptionParser
from passphrase import passphrase
import port_scan

parser = OptionParser( """cylc ping [options] SUITE
    
Check that SUITE is running. 

Arguments:
SUITE             Target suite name.""" )

parser.add_option( "-o", "--owner",
        help="Cylc suite owner (defaults to $USER).",
        metavar="USER", default=os.environ["USER"],
        action="store", dest="owner" )

parser.add_option( "--host",
        help="Cylc suite host (defaults to localhost).",
        metavar="HOST", action="store", default=socket.getfqdn(),
        dest="host" )

parser.add_option( "--port",
        help="Cylc suite port (default: scan all cylc ports).",
        metavar="INT", action="store", default=None, dest="port" )

parser.add_option( "--print-ports",
        help="Print cylc's configured port range.",
        action="store_true",default=False, dest="print_ports" )

parser.add_option( "-p", "--practice",
        help="Target a suite running in practice mode.", 
        action="store_true", default=False, dest="practice" )

( options, args ) = parser.parse_args()

if options.print_ports:
    from cylc_pyro_server import pyro_base_port, pyro_port_range
    print "cylc port range from $CYLC_DIR/src/pyro_server.py:"
    print pyro_base_port, '<= port <=', pyro_base_port + pyro_port_range
    sys.exit(0)

if len( args ) != 1:
    parser.error( "Wrong number of arguments" ) 

suite = args[0]

host = options.host
owner = options.owner
try:
    passphrase = passphrase( suite ).get()
except:
    passphrase = None

if options.port:
    port = options.port
    try:
        port_scan.check_port( suite, owner, host, port, passphrase=passphrase )
    except port_scan.SuiteIdentificationError, x:
        print x
        sys.exit(1)
else:
    try:
        port = port_scan.get_port( suite, owner, host, passphrase=passphrase )
    except port_scan.SuiteIdentificationError, x:
        print x
        sys.exit(1)
