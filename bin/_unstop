#!/usr/bin/env python

import os, sys, re
import cycle_time
import cylc_pyro_client
from CylcOptionParsers import PromptOptionParser
from port_scan import SuiteIdentificationError

parser = PromptOptionParser( """cylc [control] unstop [options] SUITE TASK_ID

Release a task from the 'stopped' state so that it can begin running as normal.
See also 'cylc [control] stop'.""",
["""TASK_ID              Task to unstop (NAME%YYYYMMDDHH)"""])

(options, args) = parser.parse_args()

if len(args) != 2:
    parser.error( "Task ID or cycle time required" )

suite = parser.get_suite_name()

target = args[1]

try:
    ( name, cycle ) = target.split('%')
except ValueError:
    parser.error( "Task ID must be NAME%YYYYMMDDHH")
if not cycle_time.is_valid( cycle ):
    parser.error( "invalid cycle time: " + cycle )

try:
    proxy = cylc_pyro_client.client( suite ).get_proxy( 'remote' )
except SuiteIdentificationError, x:
    raise SystemExit(x)

if not parser.prompt( 'Unstop task ' + target + ' in'):
    sys.exit(0)

result = proxy.unstop_task( target )

if result.success:
    print result.reason
else:
    print 'ERROR:', result.reason
    sys.exit(1)
