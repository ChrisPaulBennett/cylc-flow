#!/usr/bin/env python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|

import os, sys
import cylc_pyro_client
from CylcOptionParsers import PromptOptionParser
import Pyro.errors 

parser = PromptOptionParser( """cylc unlock [options] SUITE 

Tell a running suite that is configured to used crude safety locking 
(see suite.rc documentation) to comply with subsequent intervention
commands. The lock/unlock commands are a safety device to help guard
against inadvertant intervention in a suite.

This is unrelated to the functionality provided by the cylc lockserver,
which prevents multiple instances of a task or suite from running
simultaneously.""")

(options, args) = parser.parse_args()

if not parser.prompt( 'Unlock' ):
    sys.exit(0)

suite = parser.get_suite_name()
owner = os.environ['USER'] 
host = options.host
port = options.port

try:
    proxy = cylc_pyro_client.client( suite, owner, host, port ).get_proxy( 'remote' )
    actioned, explanation = proxy.unlock( owner )
    print explanation
except Pyro.errors.NamingError, x:
    if options.debug:
        raise
    else:
        print x
        sys.exit(1)

if not actioned:
    sys.exit(1)
