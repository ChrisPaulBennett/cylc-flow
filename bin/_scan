#!/usr/bin/env python


import os, sys, re
import socket
from optparse import OptionParser
import port_scan

parser = OptionParser( """cylc scan [options]
    
Scan cylc ports for running suites and lockservers. 

If you are running any secure suites they will not be recognized in the 
general scan (the port will return Connection Denied) unless you 
supply the passphrase on the commandline or scan only for your 
own registered suites (--mine)""" )

parser.add_option( "--host",
        help="Cylc suite host (defaults to localhost).",
        metavar="HOST", action="store", default=socket.getfqdn(),
        dest="host" )

parser.add_option( "--print-ports",
        help="Print cylc's configured port range.",
        action="store_true",default=False, dest="print_ports" )

parser.add_option( "-p","--passphrase",
        help="A secure suite access passphrase.",
        metavar="STRING", action="store", default=None, dest="passphrase" )

parser.add_option( "-m","--mine",
        help="Scan only for my registered suites. Secure suites will "
        "be recognized in this case.", 
        action="store_true", default=False, dest="mine" )

( options, args ) = parser.parse_args()

if options.print_ports:
    from cylc_pyro_server import pyro_base_port, pyro_port_range
    print "cylc port range from $CYLC_DIR/src/cylc_pyro_server.py:"
    print pyro_base_port, '<= port <=', pyro_base_port + pyro_port_range
    sys.exit(0)

host = options.host
passphrase = options.passphrase

if len(args) != 0:
    parser.error( "Wrong number of arguments" ) 

if options.mine:
    suites = port_scan.scan_my_suites( host )
    for suite in suites:
        name, port = suite
        print port_scan.suiteid( name, os.environ['USER'], host, port )
else:
    suites = port_scan.scan( host, passphrase=passphrase, verbose=True )
