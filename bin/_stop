#!/usr/bin/env python

import os, sys
import cycle_time
import cylc_pyro_client
from CylcOptionParsers import PromptOptionParser
from port_scan import SuiteIdentificationError

parser = PromptOptionParser( """cylc stop [options] SUITE [YYYYMMDDHH]

Shut a suite down:
 1/ When all currently running tasks have finished (default), or
 2/ After each task has passed a specified cycle time [YYYYMMDDHH], or
 3/ Immediately [--now].

WARNING: If you use [--now] any tasks that complete after the shutdown
(errors will occur until they try to contact the parent suite to report
completion etc.) will still be listed as "running" in the suite state
dump file and will thus be resubmitted, by default, if the suite is
restarted.""", 
[ """YYYYMMDDHH           Future cycle time after which to stop.""" ] )

parser.add_option( "--now", 
        help="Shut down immediately; see WARNING above.",
        action="store_true", default=False, dest="shutdownnow" )

(options, args) = parser.parse_args()

stop_at = False
if len( args ) == 2:
    stop_at = True
    stop_time = args[1] 

suite = parser.get_suite_name()
owner = os.environ['USER']
host = options.host
port = options.port

try:
    proxy = cylc_pyro_client.client( suite, owner, host, port ).get_proxy( 'remote' )
except SuiteIdentificationError, x:
    raise SystemExit(x)

if stop_at:
    if not cycle_time.is_valid( stop_time ):
        parser.error( "invalid cycle time: " + stop_time )
    if not parser.prompt( 'Set stop time ' + stop_time + ' for'):
        sys.exit(0)
    result = proxy.set_stop_time( stop_time )

elif options.shutdownnow:
    if not parser.prompt( 'Shut down NOW' ):
        sys.exit(0)
    result = proxy.shutdown_now()

else:
    if not parser.prompt( 'Shut down' ):
        sys.exit(0)
    result = proxy.shutdown()

if result.success:
    print result.reason
else:
    print 'ERROR:', result.reason
    sys.exit(1)
