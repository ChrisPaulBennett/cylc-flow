#!/bin/bash

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|


# Cylc task wrapper script.

# This script allows cylc to control existing tasks that have not been
# modified to do their own cylc messaging.  It can only be used for
# tasks that:
# (a) see their processing through till the end (as opposed to
# submitting or spawning subprocesses and then exiting). 
# (b) return the standard non-zeros exit status for failure. 

# The task wrapper does the following:
# (1) sends special 'started' message
# (2) executes the wrapped task (passes any commandline on)
# (3) sends the special 'succeed' message on completion,
#     or the special 'failed' message if an error occurs.

# Wrapped tasks can also send their own cylc messages, which will be
# logged by cylc, otherwise task stdout and stderr will end up in the
# job log files, depending on the job submission method.

set -e; trap 'cylc task-failed "error trapped"' ERR

# send the startup message
cylc task-started || exit 1

if (( $# >= 1 )); then
    TASK_SCRIPT=$1
    shift
else
    cylc task-failed "cylc-wrapper: no script to wrap"
    exit 1
fi

which $TASK_SCRIPT > /dev/null 2>&1 || {
    cylc task-failed "cylc-wrapper: task script $TASK_SCRIPT not found"
    exit 1
}

# execute the wrapped task and check for success or failure
if $TASK_SCRIPT $@; then 
    # succeeded
    cylc task-message --all-outputs-completed
    cylc task-finished
else
    # failed
    cylc task-failed 
fi
