#!/bin/bash


# Cylc task wrapper script.

# Allows cylc to control existing tasks that have not been modified to
# do their own cylc messaging. It can only be used for tasks that:
# (a) see their processing through till the end (as opposed to
#    submitting or spawning subprocesses and then exiting), and 
# (b) return non-zero exit status for failure. 

# The task wrapper does the following:
# (1) sends special 'started' message
# (2) executes the wrapped task, with any commandline arguments
# (3) if success: reports all registered outputs completed and finishes
#     if failure: reports failure.

# Wrapped tasks can also send their own cylc messages, which will be
# logged by cylc, but must not send their own start/finished/failed or
# registered output messages.

usage() {
    echo "USAGE: 1/ cylc-wrapper COMMAND" >&2
    echo '       2/ cylc-wrapper --multi="COMMAND1; COMMAND2; #..."' >&2
}

# SEND THE STARTUP MESSAGE
cylc task-started || exit 1

if (( $# == 0 )); then
    usage
    cylc task-failed "cylc-wrapper: no script to wrap"
    exit 1
fi

multiple=false
if [[ $1 == '-m' ]]; then
    multiple=true
    shift
fi 

# EXECUTE THE WRAPPED TASK AND CHECK FOR SUCCESS OR FAILURE

success=false
if $multiple; then
    if eval $@; then
        success=true
    fi
else
    if $@; then 
        success=true
    fi
fi

if $success; then
    # SUCCEEDED
    cylc task-message --all-outputs-completed
    cylc task-finished
else
    # FAILED
    cylc task-failed 
fi
