#!/usr/bin/env python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|


import os, sys, re
import socket
from optparse import OptionParser
from registration import registrations
import pyrex

parser = OptionParser( usage = """cylc list [options]
    
List the user and system names of all cylc systems currently using the
Pyro nameserver (the nameserver distinguishes different cylc systems by
means of a "groupname" that is constructed from username and registered
system name; see 'cylc register --help'). 

In addition to running systems this may include relics of dead systems
that aborted without properly disconnecting from Pyro. These can be
removed by:
  % pyro-nsc deletegroup :cylc-USER-SYSTEM
where USER is the system owner's username, and SYSTEM is the registered
name of the system.""" )

parser.add_option( "--host",
        help="Pyro Nameserver host (defaults to local host name).",
        metavar="HOSTNAME", action="store", default=socket.getfqdn(),
        dest="pns_host" )

( options, args ) = parser.parse_args()

# get system names currently in use in the Pyro nameserver
groups = pyrex.discover( options.pns_host ).get_groups()
myusername = os.environ[ 'USER' ]
 
if len(args) != 0:
    parser.usage() 

print len( groups ), "systems currently have objects registered in the Pyro nameserver"
count = 0
for group in groups:
    print group
    count += 1
    ( root, username, system ) = group.split('.')

    practice_mode = ""
    m = re.match( '(.*)_practice', system )
    if m:
        system = m.groups()[0]
        practice_mode = " (practice mode)"

    print ' [' + str( count ) + '] USER: ' + username + ', SYSTEM: ' + system + practice_mode
