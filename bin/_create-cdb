#!/bin/bash

#C: THIS FILE IS PART OF THE CYLC FORECAST SUITE METASCHEDULER.
#C: Copyright (C) 2008-2011 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This script creates the central suite database and registers the
# cylc example suites in it. Rerunning it has no ill effects.

set -e

usage() {
    echo ""
    echo "USAGE: cylc [admin] create-cdb"
    echo ""
    echo "This admin command should be used by the cylc administrator"
    echo "to create the central suite registration database immediately"
    echo "after installing cylc, or to upgrade the centrally held cylc"
    echo "example suites after upgrading to a new cylc version. It can"
    echo "be run multiple times without adverse effect."
}

if [[ $1 == '-h' ]] || [[ $1 == '--help' ]]; then
    usage
    exit 0
fi

if [[ -z CYLC_DIR ]]; then
    echo "export \$CYLC_DIR before running this script."
    exit 1
fi

# register locally under seconds since epoch, to avoid clashes
# with example suites imported to the admin user's private db.
SSE=$( date +%s )

CYLC_VERSION=$( cylc -v )
if [[ $CYLC_VERSION == "THIS IS NOT A VERSIONED RELEASE" ]]; then
    # we are in a cylc git repository - get most recent tag
    # and append seconds since epoch.
    CYLC_VERSION=$( git tag | tail -1 )-$SSE
fi

TOP=cylc-$( echo $CYLC_VERSION | tr '.' 'p' )

echo " + Registering example suites"
cylc register ${TOP}.admin.test $CYLC_DIR/examples/test

cylc register ${TOP}.examples.CUG.1 $CYLC_DIR/examples/CUG1

cylc register ${TOP}.examples.CUG.QS1 $CYLC_DIR/examples/CUG_QS/one
cylc register ${TOP}.examples.CUG.QS2 $CYLC_DIR/examples/CUG_QS/two
cylc register ${TOP}.examples.CUG.QS3 $CYLC_DIR/examples/CUG_QS/three

cylc register ${TOP}.examples.CUG.73 $CYLC_DIR/examples/CUG7.3
cylc register ${TOP}.examples.CUG.74 $CYLC_DIR/examples/CUG7.4

cylc register ${TOP}.examples.AutoCleanup.FFHook $CYLC_DIR/examples/AutoCleanup/FamilyFailHook
cylc register ${TOP}.examples.AutoCleanup.FFTask $CYLC_DIR/examples/AutoCleanup/FamilyFailTask

cylc register ${TOP}.examples.detach $CYLC_DIR/examples/detach

cylc register ${TOP}.examples.inherit $CYLC_DIR/examples/inherit

cylc register ${TOP}.examples.async.oneoff $CYLC_DIR/examples/async/oneoff
cylc register ${TOP}.examples.async.repeat $CYLC_DIR/examples/async/repeating

cylc register ${TOP}.examples.autorecover.async $CYLC_DIR/examples/AutoRecover/async
cylc register ${TOP}.examples.autorecover.cyclng $CYLC_DIR/examples/AutoRecover/cycling

cylc register ${TOP}.examples.generator.explicit $CYLC_DIR/examples/generator/explicit
cylc register ${TOP}.examples.generator.expression $CYLC_DIR/examples/generator/expression

cylc register ${TOP}.examples.families $CYLC_DIR/examples/families

echo " + Exporting ${TOP}.examples to the central database"
# This will create the new database file if necessary.
cylc export ${TOP}.examples ${TOP}.examples
cylc export ${TOP}.admin ${TOP}.admin

echo " + Unregistering the originals in your private database"
# We don't want the admin user accidentally modifying the originals.
cylc unregister ${TOP}

echo " + Importing copies of ${TOP}.examples to your private database"
# We don't want the admin user accidentally modifying the originals.
cylc import ${USER}.${TOP}.examples ${TOP}.examples $TMPDIR
cylc import ${USER}.${TOP}.admin ${TOP}.examples $TMPDIR

# Determine CDB directory location
# The following no longer works (see comment in lib/cylc/__init__.py)
# CDB=$(python -c 'from cylc.conf.CylcGlobals import central_regdb_dir; print central_regdb_dir')
# Use new secret command instead:
CDB=$(cylc print-cdb-dir)

echo " + Setting central database permissions: $CDB"

# Make the central db writeable by all.
# (could be just g+w if all cylc users are in the same group).
chmod go+rwx $CDB
chmod go+rw $CDB/db

echo "DONE"
