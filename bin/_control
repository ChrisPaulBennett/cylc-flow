#!/usr/bin/env python

import os, sys
import port_scan
import gtk
from optparse import OptionParser
from chooser import chooser
from config import config
from registration import registrations
from gtkmonitor import standalone_monitor

import socket

if __name__ == "__main__":

    parser = OptionParser( """cylc control [options] [SUITE]

Graphical User Interface for real time suite control and monitoring.

If SUITE is supplied the GUI will connect to the specified suite if 
it is already running; otherwise you can start the suite from the GUI
if you like. 

If SUITE is NOT supplied, a top level suite chooser window appears
to allow you to choose from among your registered suites.

Cylc control reconnects if the target suite is restarted. 

SUITE                  Registered name of the target suite.""")

    parser.add_option( "--host",
            help="cylc suite host (defaults to localhost).",
            metavar="HOST", action="store", default=socket.getfqdn(),
            dest="host" )

    ( options, args ) = parser.parse_args()

    host = options.host
    owner = os.environ["USER"]

    if len( args ) == 0:
        use_chooser = True
        suite = None
    elif len( args ) == 1:
        use_chooser = False
        suite = args[0]
    else:
        parser.error( "Wrong number of arguments" )

    imagedir = os.environ[ 'CYLC_DIR' ] + '/images'

    if use_chooser:
        app = chooser( host, imagedir )

    else:
        # get suite definition directory
        reg = registrations( owner )
        if reg.is_registered( suite ):
            suite_dir = reg.get( suite )
        else:
            reg.print_all()
            raise SystemExit( "suite " + suite + " is not registered!" )

        # get suite logging directory
        logging_dir = os.path.join( config( suite )['top level logging directory'], suite )

        # get secure passphrase
        try:
            passphrase = passphrase( suite )
        except:
            passphrase = None

        # scan for suite port
        try:
            port = port_scan.get_port( suite, owner, host, passphrase )
        except:
            port = None
            print >> sys.stderr, "WARNING: suite " + suite + " is not running"

        app = standalone_monitor( suite, owner, host, port, suite_dir, logging_dir, imagedir )

    gtk.main()
