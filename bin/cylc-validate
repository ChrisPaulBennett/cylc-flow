#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC FORECAST SUITE METASCHEDULER.
#C: Copyright (C) 2008-2012 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
from cylc.job_submission.job_submit import job_submit
from optparse import OptionParser
from cylc.registration import dbgetter, RegistrationError
from cylc.config import config, SuiteConfigError
from cylc.taskdef import DefinitionError
from cylc.version import compat, cylc_version

parser = OptionParser( """cylc [prep] validate [options] SUITE

Parse and validate a suite config (suite.rc) file to check that all
entries conform to the $CYLC_DIR/conf/suiterc.spec specification, and
then attempt to instantiate a proxy object for each task in the suite.

IF THE SUITE.RC FILE USES INCLUDE-FILES: line numbers reported with
validation errors will be wrong because the parser sees an inlined
version of the file. You can use 'cylc prep inline SUITE' to trace
errors to the correct source line, although the extra information
reported by the validator should be sufficient to make this unnecessary.

Arguments:
   SUITE    - Suite database registration.""")

parser.add_option( "-c", "--central", 
        help="target the central database.",
        action="store_true", default=False, dest="central" )

parser.add_option( "-v","--verbose",
        help="Print extra information from the validation process.",
        action="store_true", default=False, dest="verbose" )

parser.add_option( "-d","--debug",
        help="Print full exception traceback and abort on error.",
        action="store_true", default=False, dest="debug" )

parser.add_option( "-p","--pretty",
        help="(with -v,--verbose) Use unicode box drawing characters "
        "when printing the suite runtime inheritance hierarchy.",
        action="store_true", default=False, dest="pretty" )

(options, args) = parser.parse_args()

if len(args) != 1:
    parser.error( "Wrong number or arguments" )

reg = args[0]

dbg = dbgetter( options.central )
try:
    suite, suiterc = dbg.get_suite(reg)
except RegistrationError, x:
    if options.debug:
        raise
    raise SystemExit(x)

compat( suite, suiterc ).execute( sys.argv )

if options.verbose:
    print "Parsing Suite Definition"
try:
    config = config( suite, suiterc, verbose=options.verbose )
except Exception,x:
    if options.debug:
        raise
    raise SystemExit(x)

print "Suite " + suite + " is valid for cylc-" + cylc_version
