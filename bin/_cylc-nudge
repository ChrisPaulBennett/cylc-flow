#!/usr/bin/python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|


import os
from connector import connector
from CylcOptionParsers import PromptOptionParser

parser = PromptOptionParser( """cylc nudge [options] SYSTEM 

Cause the task processing loop to be invoked in a running system. To
avoid unnecessary processing cylc is designed to do this only when a
task proxy changes state, and in certain other situations. If this fails
to happen at some point the system may appear to be "stuck"; this would
imply a minor bug in cylc that should be fixed, but a quick nudge will
get the system going again in the meantime.""" )

# INVOKING THE LOOP ON A TIMEOUT WOULD BE A FAILSAFE OPTION:
# 'cylc schedule --use-timeout'?

(options, args) = parser.parse_args()

if parser.prompt( 'Nudge' ):
    god = connector( parser.get_pns_host(), parser.get_groupname(), 'remote' ).get()
    print god.nudge( os.environ['USER'] )
