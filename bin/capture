#!/usr/bin/env python

import gtk
import os, re, sys
from warning_dialog import warning_dialog, info_dialog
import subprocess

"""Run a command as a subprocess and capture the resulting stdout and
stderr to display in a dialog. Examples:
    $ capture "echo foo"
    $ capture "echo foo; echo bar" &
"""

class info(object):
    def __init__( self, stdout, stderr, command ):
        window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        #window.set_size_request(200, 200)
        window.set_border_width( 5 )
        window.set_title( 'command capture' )
        window.connect("delete_event", self.quit)
        window.set_size_request(600, 600)

        sw = gtk.ScrolledWindow()
        sw.set_policy( gtk.POLICY_NEVER, gtk.POLICY_AUTOMATIC )


        textview = gtk.TextView()
        textview.set_editable(False)
        textview.set_wrap_mode( gtk.WRAP_WORD )

        tb = textview.get_buffer()
        blue = tb.create_tag( None, foreground = "darkblue" )
        red = tb.create_tag( None, foreground = "red" )
        
        tb.insert_with_tags( tb.get_end_iter(), command, blue )

        if stdout != '':
            tb.insert_with_tags( tb.get_end_iter(), '\n\nstdout:\n', blue )
            tb.insert( tb.get_end_iter(), stdout )
        if stderr != '':
            tb.insert_with_tags( tb.get_end_iter(), '\n\nstderr:\n', red )
            tb.insert_with_tags( tb.get_end_iter(), stderr, red )
 

        vbox = gtk.VBox()
        sw.add(textview)
        vbox.add(sw)
        ok_button = gtk.Button( "Close" )
        ok_button.connect("clicked", self.quit, None, None )
        vbox.pack_start(ok_button, False)
        window.add(vbox)
        window.show_all()

    def quit( self, w, e, data=None ):
        gtk.main_quit()

if __name__ == '__main__':
    command_list = sys.argv[1:]
    command = ' '.join( command_list )
    p = subprocess.Popen( command_list,
            stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True )
    p.wait()
    stdout, stderr = p.communicate()
    if stdout != '' or stderr != '':
        info( stdout, stderr, command )
        gtk.main()
