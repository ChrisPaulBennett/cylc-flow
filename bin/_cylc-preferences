#!/usr/bin/env python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|


""" 
Commandline interface to the $HOME/.cylcrc preferences file.
"""

import sys
from optparse import OptionParser
import cylcrc

usage = """cylc preferences [options]

Manage your global cylc preferences, stored in $HOME/.cylcrc."""

parser = OptionParser( usage )

parser.add_option( "-p", "--print", 
        help="Print your current preferences.",
        action="store_true", default=False, dest="print_all" )
 
parser.add_option( "--set-defaults", 
        help="Revert to system default settings.",
        action="store_true", default=False, dest="set_defaults" )

parser.add_option( "--use-lockserver", 
        help="Switch on use of the cylc lock server.",
        action="store_true", default=False, dest="set_lockserver" )

parser.add_option( "--do-not-use-lock-server", 
        help="Switch off use of the cylc lock server.",
        action="store_true", default=False, dest="unset_lockserver" )

parser.add_option( "--set-logging-dir", 
        help="Set the top level cylc server logging directory.",
        default=None, metavar="PATH",
        action="store", dest="logging_dir" )

parser.add_option( "--set-state-dump-dir", 
        help="Set the top level cylc state dump directory.",
        default=None, metavar="PATH",
        action="store", dest="statedump_dir" )

parser.add_option( "--set-lockserver-pidfile", 
        help="Set the cylc lockserver Process ID file path.",
        default=None, metavar="PATH",
        action="store", dest="lockserver_pidfile" )

parser.add_option( "--set-lockserver-logfile", 
        help="Set the cylc lockserver log file path.",
        default=None, metavar="PATH",
        action="store", dest="lockserver_logfile" )

parser.add_option( "--rcfile", help="Use an alternative cylc rc file "
        "(this must also be explicitly provided to other cylc commands).", 
        default=None, metavar="PATH", action="store", dest="rcfile" )

parser.add_option( "--create-directories", 
        help="Create all directories specified in your preferences file. "
        "(this is done automatically when you change directory settings).",
        action="store_true", default=False, dest="create_dirs" )

( options, args ) = parser.parse_args()

if len( args ) > 0 or len( sys.argv ) == 1:
    parser.print_help()
    sys.exit(0)

# load existing cylcrc file
rcfile = cylcrc.rc( options.rcfile )

rewrite = False

if options.print_all:
    rcfile.dump()

if options.set_lockserver and options.unset_lockserver:
    parser.error( "choose one or other of the lock server options." )

if options.set_defaults:
    rcfile.set_defaults()
    rewrite = True

if options.lockserver_pidfile:
    rcfile.config[ 'lockserver' ][ 'pid file' ] = options.lockserver_pidfile
    rewrite = True

if options.lockserver_logfile:
    rcfile.config[ 'lockserver' ][ 'log file' ] = options.lockserver_logfile
    rewrite = True

if options.logging_dir:
    rcfile.config[ 'cylc' ][ 'logging directory' ] = options.logging_dir
    rewrite = True

if options.statedump_dir:
    rcfile.config[ 'cylc' ][ 'state dump directory' ] = options.statedump_dir
    rewrite = True

if options.set_lockserver:
    rcfile.config[ 'cylc' ][ 'use lockserver' ] = 'True'
    rewrite = True

if options.unset_lockserver:
    rcfile.config[ 'cylc' ][ 'use lockserver' ] = 'False'
    rewrite = True

if options.create_dirs:
    rcfile.create_dirs()

if rewrite:
    rcfile.write()
