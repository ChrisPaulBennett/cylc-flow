#!/usr/bin/env python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|


import os, sys
import cycle_time
import check_switch
import cylc_pyro_client
from CylcOptionParsers import PromptOptionParser
from Pyro.errors import NamingError

parser = PromptOptionParser( """cylc pause [options] SYSTEM [CYCLE]

Refrain from submitting any new tasks that are ready to run,
immediately, or once each task passes a given cycle time.""",
["[CYCLE]              Cycle time (YYYYMMDDHH) after which to pause."])

(options, args) = parser.parse_args()

if len( args ) == 2:
    pause_at = True
    pause_time = args[1]
    if not cycle_time.is_valid( pause_time ):
        parser.error( "invalid cycle time: " + pause_time )

else: 
    # parsing catches other errors
    pause_at = False

host = parser.get_pns_host()
group = parser.get_groupname()
user = os.environ[ 'USER' ]

god = cylc_pyro_client.client( host, group ).get_proxy( 'remote' )

if pause_at:
    if parser.prompt( 'Pause at ' + pause_time + ' for'):
        check_switch.check( god.set_hold_time( pause_time, user ))
else:
    if parser.prompt( 'Pause now' ):
        check_switch.check( god.hold( user ))
