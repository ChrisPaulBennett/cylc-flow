#!/usr/bin/env python

# THIS FILE IS PART OF THE CYLC SUITE ENGINE.
# Copyright (C) 2008-2015 NIWA
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
if '--use-ssh' in sys.argv[1:]:
    sys.argv.remove( '--use-ssh' )
    from cylc.remote import remrun
    if remrun().execute():
        sys.exit(0)

from cylc.network.suite_command import SuiteCommandClient
from cylc.CylcOptionParsers import cop
from cylc.command_prep import prep_pyro
import cylc.flags

parser = cop( """cylc [control] nudge [OPTIONS] ARGS

Cause the cylc task processing loop to be invoked in a running suite.

This happens automatically when the state of any task changes such that
task processing (dependency negotation etc.) is required, or if a
clock-triggered task is ready to run.

The main reason to use this command is to update the "estimated time till
completion" intervals shown in the tree-view suite control GUI, during
periods when nothing else is happening.""", pyro=True )

(options, args) = parser.parse_args()

suite, pphrase = prep_pyro( args[0], options ).execute()
pclient = SuiteCommandClient(
    suite, pphrase, options.owner, options.host, options.pyro_timeout,
    options.port)
if options.print_uuid:
    print >> sys.stderr, 'Client UUID: %s' % pclient.get_client_uuid()
pclient.put_command('nudge')
