#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC FORECAST SUITE METASCHEDULER.
#C: Copyright (C) 2008-2011 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
from cylc import cylc_mode
from optparse import OptionParser
from cylc.task_message import message
from cylc.locking.task_lock import task_lock

usage = """cylc [task] started [options]

This is part of the cylc external task interface.

Acquire a lock from the lockserver, and report that I have started."""

parser = OptionParser( usage )

( options, args ) = parser.parse_args()

if len( args ) != 0:
    parser.error( "Wrong number of arguments" )

message().send_started()

if not cylc_mode.mode().is_raw():
    try:
        if not task_lock().acquire():
            # If using the lockserver, failing to acquire a lock is an error
            msg = "FAILED TO ACQUIRE A TASK LOCK" 
            message( msg ).send_failed()
            sys.exit(1)
    except:
        # failed to connect to lockserver
        msg = "FAILED TO CONNECT TO A LOCKSERVER" 
        message( msg ).send_failed()
        sys.exit(1)
