#!/usr/bin/env python

#         __________________________
#         |____C_O_P_Y_R_I_G_H_T___|
#         |                        |
#         |  (c) NIWA, 2008-2010   |
#         | Contact: Hilary Oliver |
#         |  h.oliver@niwa.co.nz   |
#         |    +64-4-386 0461      |
#         |________________________|


import os, sys, re
import socket
from CylcOptionParsers import NoPromptOptionParser_u
import Pyro.errors
import cylc_pyro_client

parser = NoPromptOptionParser_u( usage = """cylc ping [options] SYSTEM
    
Check whether or not a particular cylc system is currently running. 

This command first checks that the named system has lodged a special
'pulse' object with the Pyro Nameserver, then it attempts to contact
that object in the parent cylc instance (because if a system exits
uncleanly it can leave dead objects in the nameserver).""" )

#parser.add_option( "-e", "--error", 
#        help="Exit with non-zero error status if SYSTEM is not running.",
#        action="store_true", default=False, dest="error" )

( options, args ) = parser.parse_args()

if len(args) != 1:
    parser.usage() 
    sys.exit(1)

host = parser.get_pns_host()
group = parser.get_groupname()

try:
    cylc_pyro_client.client( host, group ).ping()
except:
    print group + ' is not running'
else:
    print group + ' is running'
