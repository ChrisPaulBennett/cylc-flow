#!/bin/bash

# given a cylon system definition directory:
#    system/user_config.py
#    system/taskdef/(task definition files)

# 1/ generate task class code for cylon
# 2/ generate system environment script 
#    + this exports PATH and PYTHONPATH, and 
#      CYLON_ENV (its own path) for system scripts
#      and CYLON_BIN for utility scripts
# 3/ copy task-wrapper from cylon/bin to system/scripts

set -e  # ABORT on error

[[ $# != 1 ]] && {
	echo "USAGE: $0 <system definition dir>"
	echo "run in cylon top level directory"
	exit 1
}

[[ ! -f bin/cylon ]] && {
	echo "RUN THIS IN THE TOP LEVEL CYLON DIRECTORY"
	exit 1
}

ENV_SCRIPT='environment.sh'

SYSDIR=$1
# remove any trailing '/'
SYSDIR=${SYSDIR%/}
TOPDIR=$PWD

# access to cylon bin/ for this script
PATH=$PWD/bin:$PATH

cd $SYSDIR

# extract system name from user_config.py
SYSNAME=$( egrep "^ *config\[ *'system_name" user_config.py  | sed -e "s/.*= *'//" | sed -e "s/'.*$//" )
echo
echo "Detected system name: $SYSNAME"

echo
echo "Processing task definition files ..."

# if the command line gets too big we'll have to use xargs:
#    find taskdef -name '*.def' -o -name '*.py' | xargs task-generator.py 
# and modify task-generator.py so that it appends to the output
# task_classes.py file rather than overwriting it each time.

task-generator.py $( find taskdef -name '*.def' -o -name '*.py' ) 
echo "  => $SYSDIR/task_classes.py"
echo "done"


echo
echo -n "Installing $SYSDIR/scripts/task-wrapper ... "
mkdir -p $TOPDIR/$SYSDIR/scripts
cp $TOPDIR/bin/task-wrapper $TOPDIR/$SYSDIR/scripts
echo "done"

echo
echo -n "Generating environment script ... "

cat > $ENV_SCRIPT <<EOF
#!/bin/bash

# AUTO-GENERATED BY $0

# source this to set PATH and PYTHONPATH 
# for running cylon on system $SYSDIR

# clean existing cylon paths
      PATH=\$( $TOPDIR/bin/clean-cylon-path.sh \$PATH )
PYTHONPATH=\$( $TOPDIR/bin/clean-cylon-path.sh \$PYTHONPATH )

# not using \$HOME or relative path; may be sourced by other users
PATH=$TOPDIR/bin:$TOPDIR/$SYSDIR/scripts:\$PATH
PATH=\${PATH%:}  # in case variable was empty before
PYTHONPATH=$TOPDIR/src:$TOPDIR/src/task-classes:$TOPDIR/src/requisites:$TOPDIR/$SYSDIR:\$PYTHONPATH
PYTHONPATH=\${PYTHONPATH%:}  # in case was empty before
export PATH PYTHONPATH

# export my location as \$CYLON_ENV
export CYLON_ENV=$TOPDIR/$SYSDIR/$ENV_SCRIPT

# export cylon bin path for utility scripts
export CYLON_BIN=$TOPDIR/bin
EOF

echo "done"

echo
echo "SOURCE THE $SYSNAME ENVIRONMENT SCRIPT BEFORE RUNNING CYLON:"
echo ". $TOPDIR/$SYSDIR/environment.sh"
echo
