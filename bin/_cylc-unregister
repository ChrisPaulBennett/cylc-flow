#!/bin/bash

set -e  # ABORT on error

function print_usage() 
{
	echo "Usage: cylc unregister [options] [SYSTEM]"
    echo ""
    echo "Disassociate a system name from a configured system."
    echo ""
    echo "arguments:"
    echo "   SYSTEM      A registered system name to unregister"
    echo "               (not required for [-c] or [-x] options)."
    echo ""
    echo "options:"
    echo "  -h, --help   Print this usage message and exit"
    echo "  -c           Check ALL registrations, delete any invalid ones."
    echo "  -x           Delete ALL your registered system names."
}

# cheap hack to get '--help', which isn't allowed by getopts
if [[ $1 == '--help' ]]; then
    print_usage
    exit 0
fi

# make the registration directory if necessary
REG_DIR=$HOME/.cylc/registered
if [[ ! -d $REG_DIR ]]; then
    echo "You have 0 system names registered"
    exit 0
fi

CHECK=false
RESET=false
DELETE=false
while getopts "hcx" opt; do
    case $opt in
        h)
        print_usage
        exit 0
        ;;
        c)
        CHECK=true
        ;;
        x)
        RESET=true
        ;;
        *)
        echo "ERROR illegal option: $opt"
        exit 1
        ;;
    esac
done

shift $(( OPTIND -1 ))

if ( $RESET || $CHECK ) && [[ $# != 0 ]]; then
    echo "ERROR no arguments allowed for [-c] and [-x]"
    exit 1
fi

#----------------------------------------------------------------------
if $RESET; then
    echo "DELETING ALL CURRENT SYSTEM REGISTRATIONS"
    cd $REG_DIR

    # how many systems registered?
    N_REG=$( ls -1 | wc -l )
    echo "You have $N_REG system names registered"
    [[ $N_REG == 0 ]] && exit 0

    COUNT=0
    for REG in *; do
        COUNT=$((COUNT+1))
        echo "[$COUNT] $REG: $(cat $REG)"
        rm $REG
    done
    exit 0
fi

#----------------------------------------------------------------------
if $CHECK; then
    # go to user registration directory
    cd $REG_DIR
    # how many systems registered?
    N_REG=$( ls -1 | wc -l )
    echo "You have $N_REG system names registered"
    [[ $N_REG == 0 ]] && exit 0

    COUNT=0
    FOUND=false
    for SYSNAME in *; do 
        COUNT=$((COUNT + 1 ))
        SYS_DIR=$( cat $SYSNAME )
        if _cylc-check-configured $SYS_DIR; then
            echo "[${COUNT}] ${SYSNAME}: $SYS_DIR"
        else
            FOUND=true
            echo " UNREGISTERING AN INVALID SYSTEM: $SYSNAME"
            rm -f $SYSNAME
        fi

    done

    ! $FOUND && echo "All current registrations valid"

    exit 0
fi
if [[ $# != 1 ]]; then
    echo "ERROR: illegal number of arguments"
    exit 1
fi

#----------------------------------------------------------------------
if [[ $# != 1 ]]; then
    echo "ERROR: system name required"
    exit 1
fi
 
SYSNAME=$1

REG=$REG_DIR/$SYSNAME
if [[ -f $REG ]]; then
    echo "DELETING: $SYSNAME -> $(cat $REG)"
    rm $REG
    exit 0
else
    echo "ERROR: $SYSNAME is not registered."
    exit 1
fi
