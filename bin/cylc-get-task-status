#!/bin/bash

# Determine live job status by interrogating the task status file in
# light of current polled status.

# DEBUGGING: with 'set -x' output will be printed to cylc stderr in
# debug mode (the poll succeeded hook prints command stderr output to
# suite stderr).

if [[ $# != 3 ]]; then
    echo "ERROR: wrong number of args!" 1>&2
    exit 1
fi

STATUS_FILE=$1
TASKID=$( basename ${STATUS_FILE%.*.status} )
QUEUED=$2   # boolean
RUNNING=$3  # boolean

# QUEUED=true => polled in batch queue (may be running or not)
# RUNNING=true => polled as running

if $QUEUED && ! $RUNNING; then
    # not running yet (so no status file)
    RESULT="submitted"

else
    # running, or no longer running, or never ran
    if [[ ! -f $STATUS_FILE ]]; then
        # job did not start running
        RESULT="submission failed"
    else
        # LOAD STATUS FILE
        for LINE in $( cat $STATUS_FILE ); do
            eval $LINE
        done

        if $RUNNING; then
            RESULT="started at $CYLC_JOB_INIT_TIME"
            # TODO - checkout status file for internal outputs

        else
            # not queued and not running
            if [[ -z $CYLC_JOB_EXIT ]]; then
                # did not exit cleanly
                RESULT="failed at $CYLC_JOB_EXIT_TIME"
            else
                if [[ $CYLC_JOB_EXIT == "SUCCEEDED" ]]; then
                    RESULT="succeeded at $CYLC_JOB_EXIT_TIME"
                else
                    RESULT="failed at $CYLC_JOB_EXIT_TIME"
                fi
            fi
        fi
    fi
fi

# echo standard task message form with "polled" added:
echo "polled $TASKID $RESULT"

