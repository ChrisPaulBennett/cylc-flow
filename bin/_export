#!/usr/bin/env python

import os, re, sys
from optparse import OptionParser
from registration import localdb, centraldb, unqualify, RegistrationError

parser = OptionParser( usage = """cylc export [options] [arguments]

Export suites to the central suite database for use by others.

    $ cylc exp NAME        # suite NAME from 'default' group
    $ cylc exp GROUP:NAME  # suite GROUP:NAME
    $ cylc exp GROUP:      # (NOTE COLON) all suites in GROUP

See also:
    cylc centraldb - view and unregister central suite registrations
    cylc import    - import suites from the central suite database
    cylc register  - manage your local suite registrations""" )

( options, args ) = parser.parse_args()

if len(args) != 1:
    parser.error('Wrong number of arguments')

local = localdb()
central = centraldb() 

suite = args[0]
groupfilt = []
ownerfilt = []
namefilt = None

m = re.match( '^(\w+):$', suite )
if m:
    # 'group:'
    group = m.groups()[0]
    groupfilt.append( group )
else:
    filter = unqualify(suite)
    m = re.match( '^(\w+):(\w+)$', filter )
    if m:
        group, name = m.groups()
        groupfilt.append( group )
        namefilt = name
    elif re.match( '^(\w+)$', filter ):
        namefilt = filter
    else:
        raise SystemExit( 'Illegal registration filter: ' + filter )

suites = local.get_list( groupfilt=groupfilt, namefilt=namefilt )
if len( suites ) == 0:
    raise SystemExit( "ERROR, No matching suites to export" )

for suite, dir, descr in suites:
    # retrieve local registration
    try:
        dir,descr = local.get( suite )
    except RegistrationError, x:
        raise SystemExit(x)

    # export to central
    try:
        central.register( suite, dir, descr )
    except RegistrationError, x:
        raise SystemExit(x)

central.dump_to_file()
