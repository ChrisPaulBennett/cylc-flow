Sequenz To Do List

* CATCHUP MODE: write to state dump file: restarts assume
   catchup initially, which changes the cutoff time and may result in
   deletion of a task still needed to satisfy existing prerequisites!

* DELETING SPENT TASKS BEYOND CUTOFF WHEN NO REPLACEMENT IS AVAILABLE?
  (STUCK OPER_INTERFACE RUNNING TASK!) -- this may be proper behaviour,
  but think about it....

* allow remote-control to set a proper stop time (as opposed to an
  instant shutdown).

* document the new default O(n) brokered dependency negotation
  algorithm.

* if any task fails the system should pause itself before deleting
  any prerequisites of the failed tasks, to allow a clean restart
  on fixing the problem.

* non-O(n^2) will_get_satisfaction() for use with broker method 

* possible problem with non-broker (interaction) method: if more than
  one fuzzy satisfying postrequisite, do we end up with the most recent?

* for non-sequential tasks, allow constraint by real time? 

* when a fuzzy prerequisite is satisfied, can we change the cutoff to
  suit?

* streamflow 'caughtup' indicator does not need to specify the
  reference time that catchup was achieved even though streamflow
  catches up long before nzlam, because the indicator is only used to
  determine how far ahead of nzlam we allow topnet to get (? I need 
  to think about this).

* in dummy mode, the dummy clock time should be written to the state
  dump file so that the clock doesn't reset to the configured start time
  (plus any configured offset) on a restart.
