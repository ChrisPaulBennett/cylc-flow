HOW TO RUN CYLON for system 'foo'

[paths below are relative to the top level cylon directory]

1/ Define your system using cylon task definition files. Maintain this
as a separate repository with version tags to indicate compatibility
with cylon versions, but install it into [cylon-top]/sys/foo/
(or any sub-directory under sys/).

2/ write your cylon user config file: [cylon-top]/sys/foo/user_config.py

3/ run bin/configure-system on your system definition directory, to
generate the task class code ([cylon-top]/sys/foo/task_classes.py) and
cylon environment script ([cylon-top]/sys/foo/environment.sh). This
only needs to be done before the first run, or after changing the task
definition files.

4/ source the cylon environment file for system foo (sets the PATH and
PYTHONPATH environment variables for access to general cylon and
system-specific code modules).  This needs to be done in the shell that
runs the cylon instance that handles system foo, and in any other
shells that need to interact with the same cylon instance (e.g. system
monitors).

   $ . [cylon-top]/sys/foo/environment.sh


5/ run cylon

   $ cylon [options] [args]

6/ To control an entirely different system using the same cylon
installation, just source the appropriate
[cylon-top]/sys/[system-name]/environment.sh 
before running cylon.
