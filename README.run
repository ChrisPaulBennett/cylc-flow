HOW TO RUN CYCLON for system 'foo'

[paths below are relative to the top level cyclon directory]

1/ Define your system using cyclon task definition files. Maintain this
as a separate repository with version tags to indicate compatibility
with cyclon versions, but install it into [cyclon-top]/sys/foo/
(or any sub-directory under sys/).

2/ write your cyclon user config file: [cyclon-top]/sys/foo/user_config.py

3/ run bin/configure-system on your system definition directory, to
generate the task class code ([cyclon-top]/sys/foo/task_classes.py) and
cyclon environment script ([cyclon-top]/sys/foo/environment.sh). This
only needs to be done before the first run, or after changing the task
definition files.

4/ source the cyclon environment file for system foo (sets the PATH and
PYTHONPATH environment variables for access to general cyclon and
system-specific code modules).  This needs to be done in the shell that
runs the cyclon instance that handles system foo, and in any other
shells that need to interact with the same cyclon instance (e.g. system
monitors).

   $ . [cyclon-top]/sys/foo/environment.sh


5/ run cyclon

   $ cyclon [options] [args]

6/ To control an entirely different system using the same cyclon
installation, just source the appropriate
[cyclon-top]/sys/[system-name]/environment.sh 
before running cyclon.
