TO DO LIST

* run all tasks by default, use config file to exclude

* use methods is_running(), is_finished(), etc. to determine task state
  to isolate from current spelling dependence ( "finishd" etc.)

* per-postrequisite estimated run completion times, for dummy mode

* retrofit proper exception handling

* state/config dump to ease multiflight restart?

* reinstate startup states

* remote logging from model messaging interface script and task_dummy.py:
  + if a message gets through to the right in-controller task object, it will
  be logged by the controller (DONE)
  + if it fails, attempt to contact the controller's dead-letter object
  and it will be logged, with a warning, from there (DONE?) 
  + finally, in case the controller itself if dead, log to a dedicated
  non-controller log.
