#!/usr/bin/python

import os, sys

def usage():
    print 'USAGE: ' + sys.argv[0] + ' <n (number of tasks)>'
    print 'Generate a system of n interdependent cylc task definition files,'
    print 'and a cylc config file to run the system in dummy mode. For use'
    print 'in testing cylc performance on large task numbers (dummy mode'
    print 'and real mode are the same as far as cylc is concerned).'
    print ''
    print 'Each task depends only on the previous one, i.e. a simple linear'
    print 'sequence so that only a few external dummy task programs run at once.'
    print 'This prevents the system (hardware, not cylc) being swamped by a'
    print 'large number of external dummy programs all running at the same time.'
    print ''
    print 'Output locations relative to script running directory:'
    print '  systems/scaling-test/taskdef/(task definition files)'
    sys.exit(1)

def main( argv ):

    if len( argv ) != 2:
        usage()

    n_tasks = argv[1]

    topdir = 'systems/scaling-test'
    defdir = topdir + '/taskdef'

    if not os.path.exists( defdir ):
        print '> creating directory ' + defdir 
        os.makedirs( defdir )

    print "> writing task definition files:"
    for task in range( 1, int(n_tasks) + 1 ):

        tdef = 'T' + str( task )
        prev_tdef = 'T' + str( task - 1 )

        print "   + " + 'T' + str(task) + '.def'
    
        FILE = open( defdir + '/' + tdef + '.def', 'w' )
     
        FILE.write(
                """
# THIS IS A cylc TASK CLASS DEFINITION FILE

%NAME
""" )
        FILE.write( tdef + '\n' )

        FILE.write(
            """
%DESCRIPTION
    foo bar baz

%TYPE
    free, sequential

%CYCLES
    0,6,12,18

%TASK
    null

%PREREQUISITES
""")

        if task == 1:
            FILE.write('# None (this is the first task)\n\n')

        else:
            FILE.write( '    "' + prev_tdef + '%$(CYCLE_TIME) finished"\n' )
            
        FILE.write( 
            """
%OUTPUTS
    # defaults only
""")
        FILE.close() 

    # write readme file
    print "\n> writing " + topdir + "/ReadMe" 
    FILE = open( topdir + '/ReadMe', 'w' )

    FILE.write( "This cylc system was autogenerated by " + sys.argv[0] + "\n" )
    FILE.close()

if __name__ == '__main__':
    main( sys.argv )
