title = NZLAM Master Suite
description = """NZLAM Master Suite"""

job submission method = ll_basic
job submission log directory = running/logs/nzlam
use secure passphrase = False
use lockserver = False

[ dummy mode ]
dummy task run time in seconds = 10

[task insertion groups]
 nzlam_coldstart = get_globaldump, GLtoGL_recon, GLtoNZ_recon, forecast_cold 

[task families]
    OPS = OPS_AircraftSonde, OPS_AIRS, OPS_ATOVS, OPS_GPSRO, OPS_IASI, OPS_SurfaceScatt, OPS_Satwind

[dependency graph]
    [[0,6,12,18]]
    a = get_frames => make_alabc => forecast => get_outputs & housekeeping
    b = get_obstore & get_bgerr => OPS
    c = forecast(T-6) => VAR_ConfigureLS & OPS
    d = OPS & VAR_ConfigureLS => VAR_AnalysePF => VAR_monitoring & forecast
    [[0]]
    e = forecast(T-6) => NZtoNZ_recon => forecast
   
    [[0,6,12,18]]
    e = prepare_suite| =c=> get_globaldump| get_obstore & get_bgerr & get_frames
    f = get_globaldump| => GLtoGL_recon| => GLtoNZ_recon| => forecast_cold| =mc=> forecast
    g = forecast_cold| =c=> OPS & VAR_ConfigureLS
    [[0]]
    i = forecast_cold| =c=> NZtoNZ_recon

[environment]
#__________________________
# TOP I/O LEVEL DIRECTORIES

INPUT_DIR   = /oper/admin/um_fcm/suites/nzlam/test-data/suite
OUTPUT_DIR  = /oper/admin/um_fcm/suites/nzlam/test-output/suite
CONTROL_DIR = $CYLC_SUITE_DIR/control
#CONTROL_DIR = /oper/admin/um_fcm/suites/nzlam/master/control
RUNNING_DIR = $HOME/running/$CYLC_SUITE_NAME

#_________________
# COMPONENT_BUILDS

UM_EXECUTABLE      = $CYLC_SUITE_DIR/build/um/xabgz/xabgz.exe
CYLC_OPS_BUILD_DIR = $CYLC_SUITE_DIR/build/ops/oaamz
CYLC_VAR_BUILD_DIR = $CYLC_SUITE_DIR/build/var/vaahz

#_______________________________________
# UM, OPS, VAR processed job directories

GLtoGL_RECON_JOBDIR = $CYLC_SUITE_DIR/jobdirs/um/xabga
GLtoNZ_RECON_JOBDIR = $CYLC_SUITE_DIR/jobdirs/um/xabgb
NZtoNZ_RECON_JOBDIR = $CYLC_SUITE_DIR/jobdirs/um/xabgc

WARMSTART_RUNID  = xabge
WARMSTART_JOBDIR = $CYLC_SUITE_DIR/jobdirs/um/$WARMSTART_RUNID
COLDSTART_JOBDIR = $CYLC_SUITE_DIR/jobdirs/um/xabgd

VAR_CONFIGURELS_JOBDIR   = $CYLC_SUITE_DIR/jobdirs/var/vaaha
VAR_ANALYSEPF_JOBDIR     = $CYLC_SUITE_DIR/jobdirs/var/vaahb

OPS_AIRCRAFTSONDE_JOBDIR = $CYLC_SUITE_DIR/jobdirs/ops/oaama
OPS_AIRS_JOBDIR          = $CYLC_SUITE_DIR/jobdirs/ops/oaamb
OPS_ATOVS_JOBDIR         = $CYLC_SUITE_DIR/jobdirs/ops/oaamc
OPS_GPSRO_JOBDIR         = $CYLC_SUITE_DIR/jobdirs/ops/oaamd
OPS_IASI_JOBDIR          = $CYLC_SUITE_DIR/jobdirs/ops/oaame
OPS_SATWIND_JOBDIR       = $CYLC_SUITE_DIR/jobdirs/ops/oaamf
OPS_SURFACESCATT_JOBDIR  = $CYLC_SUITE_DIR/jobdirs/ops/oaamg

#_____________________
# EXTERNAL INPUT FILES

TEMPLATE_REDUCED_GLOBAL_DUMP = $INPUT_DIR/qwqgHH.reduced.YYYYMMDDHH.T+3
TEMPLATE_GLOBAL_DUMP         = $INPUT_DIR/qwqgHH.YYYYMMDDHH.T+3
TEMPLATE_FRAMES_FILE         = $INPUT_DIR/YYYYMMDD_frame_qgHH_niwa
TEMPLATE_BGERR_FILE          = $INPUT_DIR/qwq3HH_YYYYMMDDHH_bgerr
TEMPLATE_OBSTORE_DIR         = $INPUT_DIR/qwq3HH.YYYYMMDDHH.obstore
TEMPLATE_OBSTORE_DIR_TGZ     = $INPUT_DIR/qwq3HH_YYYYMMDDHH_obstore.tar.gz

#___________________
# OUTPUT DIRECTORIES

TEMPLATE_CYCLE_OUTPUT     = $RUNNING_DIR/YYYYMMDDHH
TEMPLATE_LOGFILE_DIR      = $TEMPLATE_CYCLE_OUTPUT/logs
TEMPLATE_LISTING_DIR      = $TEMPLATE_CYCLE_OUTPUT/listing
TEMPLATE_STATS_DIR        = $TEMPLATE_CYCLE_OUTPUT/stats
TEMPLATE_STAGING_DIR      = $TEMPLATE_CYCLE_OUTPUT/staging
TEMPLATE_DATAM_DIR        = $TEMPLATE_STAGING_DIR
TEMPLATE_DATAW_DIR        = $TEMPLATE_STAGING_DIR

#_________________________
# SUITE INTERMEDIATE FILES

TEMPLATE_CXBACK_DIR    = $TEMPLATE_STAGING_DIR/cxback
TEMPLATE_LSBACK_DIR    = $TEMPLATE_STAGING_DIR/lsback
TEMPLATE_VAROB_DIR     = $TEMPLATE_STAGING_DIR/varob
TEMPLATE_VARCX_DIR     = $TEMPLATE_STAGING_DIR/varcx
TEMPLATE_LSDUMP_DIR    = $TEMPLATE_STAGING_DIR/lsdumps
TEMPLATE_PPVAR_FILE    = $TEMPLATE_LSBACK_DIR/ppvar.um
TEMPLATE_PP7CX_FILE    = $TEMPLATE_CXBACK_DIR/pp7cx.um
TEMPLATE_ALABC_FILE    = $TEMPLATE_STAGING_DIR/nzlam.alabc
TEMPLATE_VAR_INCR_FILE = $TEMPLATE_STAGING_DIR/var-incr.um
TEMPLATE_RESTART_DUMP  = $TEMPLATE_DATAM_DIR/${WARMSTART_RUNID}a_da003
TEMPLATE_RECONFIGURED_RESTART_DUMP = $TEMPLATE_DATAM_DIR/${WARMSTART_RUNID}a_da003.recon

#___________________________________________
# UM output fieldsfiles - final destinations

TEMPLATE_pp0 = $OUTPUT_DIR/tn_YYYYMMDDHH_utc_nzlam_12.um
TEMPLATE_pp1 = $OUTPUT_DIR/sls_YYYYMMDDHH_utc_nzlam_12.um
TEMPLATE_pc  = $OUTPUT_DIR/met_YYYYMMDDHH_utc_nzlam_12.um
TEMPLATE_pi  = $OUTPUT_DIR/escape_YYYYMMDDHH_utc_nzlam_12.um

#____________________
# STATIC CONTROL FILES

__CTRL                      = $CONTROL_DIR/PS24_NAE_controlfiles
__UM_CTRL                   = $CONTROL_DIR/um/vn7.4/ctldata

# OPS
CYLC_OPS_STATIONLIST_DIR    = $__CTRL/OPS/control/StationLists/ATMOS/CAM/PS24
CYLC_OPS_SONDECOEFFS_DIR    = $__CTRL/OPS/control/Sonde_coeffs/my/L70/v2
CYLC_OPS_RTTOV7COEFFS_DIR   = $__CTRL/Data/RTTOV7_coeffs/default/v18
CYLC_OPS_SATRADCOEFFS_DIR   = $__CTRL/Data/SatRad_coeffs/my/v35
CYLC_OPS_SATRADBIASES_DIR   = $__CTRL/Data/SatRad_biases/my/v3
CYLC_OPS_SATWINDNL_DIR      = $__CTRL/OPS/control/Satwind_namelists/default/v5
CYLC_OPS_SCATWINDCOEFFS_DIR = $__CTRL/OPS/control/Scatwind_coeffs/default/v14
CYLC_OPS_GPSROCOEFFS_DIR    = $__CTRL/Data/GPSRO_coeffs/my/v3

# VAR_ConfigureLS
CYLC_VAR_GRID               = $__CTRL/VAR/control/Grid/162162_70
CYLC_VAR_RC_PPXREFU_DIR     = $__CTRL/VAR/control/Var_PPXref/gl_ND/v10


CYLC_UM_STASHMASTER         = $__UM_CTRL/STASHmaster
CYLC_UM_ANCILMASTER         = $__UM_CTRL/ANCILmaster
CYLC_VERT_LEV               = $__UM_CTRL/vert/vertlevs_L70_80km

# VAR AnalysePF
CYLC_VAR_COVACC             = $__CTRL/Data/Var_CovStats_64/my/N216L70/v1/CovStats
CYLC_VAR_RHPARMS_DIR        = $CYLC_OPS_SONDECOEFFS_DIR
CYLC_VAR_SATRADCOEFFS_DIR   = $CYLC_OPS_SATRADCOEFFS_DIR
CYLC_VAR_RTTOV7COEFFS_DIR   = $CYLC_OPS_RTTOV7COEFFS_DIR
CYLC_VAR_UMGRID             = $__CTRL/VAR/control/Grid/324324_70
CYLC_VAR_PFRECONGRID        = $CYLC_VAR_GRID

# makebc
MAKEBC_NAMELIST = $CONTROL_DIR/makebc/nzlam_frames_full_L70.nl
# (oper suite handles all OPS and VAR control files in this way).

[tasks]
[[OPS]] #---------------------------------------------------------------
[[OPS_AIRS]] #----------------------------------------------------------
    description = Extract and Process AIRS obs
    command list = OPS-wrapper.sh,
    [[[environment]]]
        OPSUI_JOB_DIR = $OPS_AIRS_JOBDIR
    [[[directives]]]
        # OPSUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL


[[OPS_ATOVS]] #---------------------------------------------------------
    description = Extract and Process ATOVS obs
    command list = OPS-wrapper.sh,
    [[[environment]]]
        OPSUI_JOB_DIR = $OPS_ATOVS_JOBDIR
    [[[directives]]]
        # OPSUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL

[[OPS_AircraftSonde]] #-------------------------------------------------
    description = Extract and Process Aircraft and Sonde obs
    command list = OPS-wrapper.sh,
    [[[environment]]]
        OPSUI_JOB_DIR = $OPS_AIRCRAFTSONDE_JOBDIR
    [[[directives]]]
        # OPSUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL

[[OPS_GPSRO]] #---------------------------------------------------------
    description = Extract and Process GPSRO obs
    command list = OPS-wrapper.sh,
    [[[environment]]]
        OPSUI_JOB_DIR = $OPS_GPSRO_JOBDIR
    [[[directives]]]
        # OPSUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL

[[OPS_IASI]] #----------------------------------------------------------
    description = Extract and Process IASI obs
    command list = OPS-wrapper.sh,
    [[[environment]]]
        OPSUI_JOB_DIR = $OPS_IASI_JOBDIR
    [[[directives]]]
        # OPSUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL

[[OPS_Satwind]] #-------------------------------------------------------
    description = Extract and Process Satwind obs
    command list = OPS-wrapper.sh,
    [[[environment]]]
        OPSUI_JOB_DIR = $OPS_SATWIND_JOBDIR
    [[[directives]]]
        # OPSUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL

[[OPS_SurfaceScatt]] #--------------------------------------------------
    description = Extract and Process Surface and Scatterometer obs
    command list = OPS-wrapper.sh,
        [[[environment]]]
        OPSUI_JOB_DIR = $OPS_SURFACESCATT_JOBDIR
    [[[directives]]]
        # OPSUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL

[[get_outputs]] #-------------------------------------------------------
    description = """Move forecast model output PP files from the UM
    output directories to the suite output directory, renaming them
    appropriately."""
    command list = cylc-wrapper get-outputs.sh $WARMSTART_RUNID pp0 pp1 pc pi,

[[housekeeping]] #------------------------------------------------------
    description = """Clean up output that would otherwise accumulate
    indefinitely by rolling the running archive after at 120 hours prior
    to cycle time."""
    scripting = """
        cylcutil check-vars -d RUNNING_DIR
        cylcutil rolling-archive $RUNNING_DIR 120"""

[[get_bgerr]] #----------------------------------------------------------
    description = Retrieve bgerr file for current cycle.
    command list = cylc-wrapper get-inputs.sh --bgerr,
    type modifier list = clock( offset = 3 hour ),

[[get_frames]] #--------------------------------------------------------
    description = Retrieve frames files for the current cycle.
    command list = cylc-wrapper get-inputs.sh --frames,
    type modifier list = clock( offset = -2.25 hour ),
    # we have to use frames generated by previous global run
    # they are ready approx 2.25 hours before current cycle time.

[[get_globaldump]] #----------------------------------------------------
    description = Retrieve global start dump for current cycle coldstart.
    type modifier list = clock( offset = 3 hour ),
    command list = cylc-wrapper get-inputs.sh --globaldump,

[[get_obstore]] #-------------------------------------------------------
    description = Retrieve obstore files for current cycle.
    type modifier list = clock( offset = 3 hour ),
    command list = cylc-wrapper get-inputs.sh --obstore,

[[make_alabc]] #--------------------------------------------------------
    description = Convert NZLAM frames to an ALABC (boundary condition) file
    command list = cylc-wrapper make_alabc.sh --keep,
    scripting = """. ~um_fcm/user-config/um.profile"""
    [[[directives]]]
        # serial job on fitzroy
        job_type     =  serial
        class        = serial
        cluster_list = AIX-LL-Cluster1

[[forecast]] #----------------------------------------------------------
    description = warm cycle forecast
    type modifier list = model(restarts = 1),
    command list = UM-wrapper.sh,
    scripting = """
    export UM_PPVARFILE=$( cylcutil template TEMPLATE_PPVAR_FILE )
    export UM_PP7CXFILE=$( cylcutil template TEMPLATE_PP7CX_FILE )
    export UM_DATAMDIR=$(  cylcutil template TEMPLATE_DATAM_DIR  )
    export UM_DATAWDIR=$(  cylcutil template TEMPLATE_DATAW_DIR  )
    export UM_ALABCFILE=$( cylcutil template TEMPLATE_ALABC_FILE )
    export UM_VARINCFILE=$( cylcutil template TEMPLATE_VAR_INCR_FILE )
    if [[ $( cylcutil cycle-time --hour ) == 00 ]]; then
        export UM_STARTDUMP=$( cylcutil template -s 6 $TEMPLATE_RECONFIGURED_RESTART_DUMP )
    else
        export UM_STARTDUMP=$( cylcutil template -s 6 $TEMPLATE_RESTART_DUMP )
    fi
    export UM_LOGDIR=$( cylcutil template TEMPLATE_LOGFILE_DIR )
    """
    [[[environment]]]
        UMUI_JOBDIR = $WARMSTART_JOBDIR
  
    [[NZtoNZ_recon]]
    description = Reconfigure the NZLAM model restart dump
    command list = UMrecon-wrapper.sh,
    scripting = """
    export UMRECON_INPUTDUMP=$(  cylcutil template -s 6 TEMPLATE_RESTART_DUMP ) 
    export UMRECON_OUTPUTDUMP=$( cylcutil template -s 6 TEMPLATE_RECONFIGURED_RESTART_DUMP ) 
    export UMRECON_LOGDIR=$(     cylcutil template      TEMPLATE_LOGFILE_DIR )
    """
    [[[environment]]]
        UMUI_JOBDIR = $NZtoNZ_RECON_JOBDIR

[[GLtoNZ_recon]] #------------------------------------------------------
    description = Reconfigure the cold start dump for the NZLAM
    command list = UMrecon-wrapper.sh,
    scripting = """
    export UMRECON_INPUTDUMP=$(  cylcutil template -s 6 TEMPLATE_GLOBAL_DUMP ) 
    export UMRECON_OUTPUTDUMP=$( cylcutil template -s 6 TEMPLATE_RESTART_DUMP ) 
    export UMRECON_LOGDIR=$(     cylcutil template      TEMPLATE_LOGFILE_DIR )
    """
    [[[environment]]]
        UMUI_JOBDIR = $GLtoNZ_RECON_JOBDIR

[[forecast_cold]] #-----------------------------------------------------
    description = NZLAM initial forecast from global model start dump.
    command list = UM-wrapper.sh,
    scripting = """
    export UM_STARTDUMP=$( cylcutil template -s 6 $TEMPLATE_RESTART_DUMP )
    export UM_PPVARFILE=$( cylcutil template -s 6 TEMPLATE_PPVAR_FILE   )
    export UM_PP7CXFILE=$( cylcutil template -s 6 TEMPLATE_PP7CX_FILE   )
    export UM_DATAMDIR=$(  cylcutil template -s 6 TEMPLATE_DATAM_DIR    )
    export UM_DATAWDIR=$(  cylcutil template -s 6 TEMPLATE_DATAW_DIR    )
    export UM_ALABCFILE=$( cylcutil template      TEMPLATE_ALABC_FILE   )
    export UM_LOGDIR=$(    cylcutil template      TEMPLATE_LOGFILE_DIR  )
    """
    [[[environment]]]
        UMUI_JOBDIR = $COLDSTART_JOBDIR

[[GLtoGL_recon]] #------------------------------------------------------
    description = """Reconfigure a reduced UM global model dump to add
    in global ancillary fields and generate a full sized UM global
    global start dump."""
    command list = UMrecon-wrapper.sh,
    scripting = """
    export UMRECON_INPUTDUMP=$(  cylcutil template -s 6 TEMPLATE_REDUCED_GLOBAL_DUMP ) 
    export UMRECON_OUTPUTDUMP=$( cylcutil template -s 6 TEMPLATE_GLOBAL_DUMP ) 
    export UMRECON_LOGDIR=$(     cylcutil template      TEMPLATE_LOGFILE_DIR )
    """
    [[[environment]]]
        UMUI_JOBDIR = $GLtoGL_RECON_JOBDIR

[[VAR_monitoring]] #-----------------------------------------------------

[[VAR_AnalysePF]] #-----------------------------------------------------
    description = VAR Analysis
    command list = VAR-wrapper.sh,
    [[[environment]]]
        VARUI_JOB_DIR = $VAR_ANALYSEPF_JOBDIR
    [[[directives]]]
        # VARUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL

[[VAR_ConfigureLS]] #---------------------------------------------------
    description = VAR Reconfiguration
    command list = VAR-wrapper.sh,
    [[[environment]]]
        VARUI_JOB_DIR = $VAR_CONFIGURELS_JOBDIR
    [[[directives]]]
        # VARUI <JOB>_init requires $LOGNAME within loadleveler
        environment = COPY_ALL

    # Also depend on UM_nzlam_recon, which runs at 00 UTC. Both these
    # tasks trigger off the UM f/c, are essentially the same program (UM
    # reconfiguration), and can (apparently) interfere in their use of
    # temp directories. See EcoConnect JIRA ticket 195.
    #if HOUR in 0:
    #   "NZtoNZ_recon%$(CYCLE_TIME) finished"

[[prepare_suite]]
