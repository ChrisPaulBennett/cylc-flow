
title = main cylc userguide example suite

#        > B => E
#       /   \
# X => A     => D
#       \   /
#        > C => F

description = """This suite implements the main cylc userguide example.
'Models' A.sh, B.sh, and C.sh; 'post processing tasks' D.sh, E.sh, F.sh;
and 'external data collection task' X.sh are not cylc-aware and each
have their own independent input and output directories, but they
generate output (using the touch command) and read input (by requiring
input files to be present) such that they must execute according to the
suite dependency graph. The three 'forecast models', A, B, and C, all
require restart files generated by their previous instance, at T-6."""

use lockserver = False

#[experimental]
#write live graph = True

[visualization]
#when to stop updating = 6
default node attribute list = style = filled, fillcolor = pink, shape = ellipse

[dummy mode]
#clock offset from initial cycle time in hours = 0
task run time in seconds = 1

[dependency graph]
    [[ task types ]]
    list of sequential tasks = A, B, C
    list of oneoff tasks = ColdA, ColdB, ColdC, prep
    list of tasks to use only at startup = prep,

    [[ 0,6,12,18 ]]
        graph =  """X => A => B => E
                    A => C
                    B & C => D
                    #C => F => PostF
    
            # cold start the three models:
                    ColdA* | A(T-6) => A
                    ColdB* | B(T-6) => B
                    ColdC* | C(T-6) => C

            # make everything depend on a special startup task
            prep => X & ColdA & ColdB & ColdC
                 """

    [[ 0,6,18 ]]
       graph = """C => F
       """
    [[ 12 ]]
       graph = """C => chumfatty => F
       """

[environment]
TASK_EXE_SECONDS = 5
WORKSPACE = /tmp/$USER/$CYLC_SUITE_NAME
# these are required by the models and their coldstart tasks:
A_RUNNING_DIR = $WORKSPACE/RunningA
B_RUNNING_DIR = $WORKSPACE/RunningB
C_RUNNING_DIR = $WORKSPACE/RunningC

[ tasks ]
    [[prep]]
    list of commands = cylc-wrapper clean-workspace.sh $WORKSPACE,

    [[X]]
    #type modifier list = clock(offset = 1 hour),
    list of commands = cylc-wrapper X.sh,
        [[[ environment ]]]
        X_OUTPUT_DIR = $WORKSPACE
 
    [[A]]
    #type modifier list = model(restarts = 3),
    list of commands = cylc-wrapper A.sh,
        [[[environment]]]
        A_INPUT_DIR = $WORKSPACE
        A_OUTPUT_DIR = $WORKSPACE

    [[B]]
    #type modifier list = model(restarts = 3),
    list of commands = cylc-wrapper B.sh,
        [[[environment]]]
        B_INPUT_DIR = $WORKSPACE
        B_OUTPUT_DIR = $WORKSPACE

    [[C]]
    #type modifier list = model(restarts = 3),
    list of commands = cylc-wrapper C.sh,
        [[[environment]]]
        C_INPUT_DIR = $WORKSPACE
        C_OUTPUT_DIR = $WORKSPACE
        [[[outputs]]]
        foo = shit and bus tickets ready for $(CYCLE_TIME)

    [[D]]
    list of commands = cylc-wrapper D.sh,
        [[[environment]]]
        D_INPUT_DIR = $WORKSPACE
        D_OUTPUT_DIR = $WORKSPACE
 
    [[E]]
    list of commands = cylc-wrapper E.sh,
        [[[environment]]]
        E_INPUT_DIR = $WORKSPACE
        E_OUTPUT_DIR = $WORKSPACE
 
    [[F]]
    list of commands = cylc-wrapper F.sh,
        [[[environment]]]
        F_INPUT_DIR = $WORKSPACE
        F_OUTPUT_DIR = $WORKSPACE

    [[G]]
    list of commands = cylc-wrapper G.sh,
        [[[environment]]]
        G_INPUT_DIR = $WORKSPACE
        G_OUTPUT_DIR = $WORKSPACE

    [[ColdA]]
    description = "fulfils restart dependencies for model A"
    list of commands = cylc-wrapper ColdA.sh,

    [[ColdB]]
    description = "fulfils restart dependencies for model B"
    list of commands = cylc-wrapper ColdB.sh,

    [[ColdC]]
    description = "fulfils restart dependencies for model C"
    list of commands = cylc-wrapper ColdC.sh,

    [[chumfatty]]
    [[PostF]]
