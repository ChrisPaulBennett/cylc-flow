
description = simple asynchronous example suite

[dependencies]
    [[12]]
        graph = "A => B"

[special tasks]
    daemon = watcher

[raw task definitions]
    [[watcher]]
        type = daemon
        output pattern = SATID
        command = watcher.sh
    [[upload]]
        type = asynchronous
        command = upload.sh
        [[[outputs]]]
            # my outputs
            one = "(SATID-\d+) uploaded"
        [[[pattern prerequisites]]]
            # my prerequisites
            one = "(SATID-\d+) ready for processing"
        [[[death prerequisites]]]
            # I can be removed when this condition is satisfied
            one = "(SATID-\d+) processing finished"
    [[archive]]
        type = asynchronous
        command = archive.sh
        [[[outputs]]]
            one = "(SATID-\d+) archived"
        [[[pattern prerequisites]]]
            one = "(SATID-\d+) ready for processing"
        [[[death prerequisites]]]
            one = "(SATID-\d+) processing finished"
    [[finishup]]
        # a task to mark the end of processing of one pass
        type = asynchronous
        command = cylc task message $ASYNCID processing finished
        [[[outputs]]]
            one = "(SATID-\d+) processing finished"
        [[[pattern prerequisites]]]
            one = "(SATID-\d+) uploaded"
            two = "(SATID-\d+) archived"
        [[[death prerequisites]]]
            one = "(SATID-\d+) processing finished"

