#!/bin/bash

set -e

# Generates pdf documentation from cylc LaTeX source.

usage() {
	echo "USAGE: [-f][-c] $0"
    echo ' -f, force re-conversion of eps figures to PDF'
    echo ' -c, force re-processing of command documentation'
    echo "Run this script from \$CYLC_DIR"
}

if [[ ! -f bin/cylc ]]; then
    echo "Run this script from \$CYLC_DIR"
    exit 1
fi

FORCE=false
FORCE_COMMANDS=false
if [[ $# > 0 ]]; then 
    for arg in $@; do
        if [[ $arg = -c ]]; then
            FORCE_COMMANDS=true
        elif [[ $arg = -f ]]; then
            FORCE=true
        else
            usage
            exit 1
        fi
    done
fi

# GENERATE suite.rc ENTRY REFERENCE .................................
perl <<eof
open FOO, "<", "conf/suiterc.spec" or die \$!;
open BAR, ">", "doc/suiterc.spec.tex" or die \$!;
\$depth = 1;
while( <FOO> ) {
    chomp;
    if ( m/^#>IGNORE$/ ) {
        \$ignore = 1;
    } elsif ( m/^#>RESUME$/ ) {
        \$ignore = 0;
    }
    if ( \$ignore == 1 ) {
        next;
    }
    if ( m/^\s*\[\[\[.*\]\]\]\s*\$/ ) {
        \$depth = 3;
    } elsif ( m/^\s*\[\[.*\]\]\s*\$/ ) {
        \$depth = 2;
    } elsif ( m/^\s*\[.*\]\s*\$/ ) {
        \$depth = 1;
    }
    if ( \$depth == 1) {
        s@^([\w \-\_]+)=.*@\\\subsubsection{\1}@;
    } elsif ( \$depth == 2 ) {
        s@^([\w \-\_]+)=.*@\\\paragraph{\1}@;
    } elsif ( \$depth == 3 ) {
        s@^([\w \-\_]+)=.*@\\\subparagraph{\1}@;
    }

    s@^\s*(\[\[\[.*\]\]\])\s*\$@\\\paragraph{\1}@; 
    s@^\s*(\[\[.*\]\])\s*\$@\\\subsubsection{\1}@; 
    s@^\s*(\[.*\])\s*\$@\\\subsection{\1}@; 

    s@^(.*)__many__(.*)@\1\\\textless MANY\\\textgreater\2@;
    s@^#>RESUME@@;
    s@^#>@@;
    s@^\s*#.*@@;

    print BAR "\$_\n";
}
close(FOO);
close(BAR);
eof

# GENERATE COMMAND REFERENCE CHAPTER CONTENTS -----------------------
if $FORCE_COMMANDS; then
    rm -rf doc/command-usage; mkdir -p doc/command-usage
    rm -f doc/commands.tex

    cylc help >> doc/command-usage/help.txt

    # append to a latex file for inclusion in the userguide
    echo "\label{help}" >> doc/commands.tex
    echo "\lstinputlisting{command-usage/help.txt}" >> doc/commands.tex
    #echo "\pagebreak" >> doc/commands.tex

    echo "\subsection{Command Categories}" >> doc/commands.tex

    for CAT in $(cylc categories); do 
        echo "o $CAT"
        # direct command help into a txt file
        cylc help $CAT >> doc/command-usage/$CAT.txt
        # append to a latex file for inclusion in the userguide
        echo "\subsubsection{$CAT}" >> doc/commands.tex
        echo "\label{$CAT}" >> doc/commands.tex
        echo "\lstinputlisting{command-usage/$CAT.txt}" >> doc/commands.tex
        #echo "\pagebreak" >> doc/commands.tex
    done

    echo "\subsection{Commands}" >> doc/commands.tex
    for COMMAND in $(cylc commands); do 
        echo "+ $COMMAND"
        # direct command help into a txt file
        cylc $COMMAND --help | egrep -v '^DONE$' > doc/command-usage/$COMMAND.txt
        # append to a latex file for inclusion in the userguide
        echo "\subsubsection{$COMMAND}" >> doc/commands.tex
        echo "\label{$COMMAND}" >> doc/commands.tex
        echo "\lstinputlisting{command-usage/$COMMAND.txt}" >> doc/commands.tex
        #echo "\pagebreak" >> doc/commands.tex
    done
fi

cylc --version > doc/version.txt

#-----------------------------------------------------------------------

cd doc

#cd inkscape-svg
#for F in *.eps; do
#    [[ ! -f ${F%eps}pdf ]] || $FORCE && {
#        echo converting $F to PDF
#        epstopdf $F
#    }
#done
#cd ..

pdflatex cug-pdf.tex
pdflatex cug-pdf.tex
pdflatex cug-pdf.tex

rm *.aux

htlatex cug-html.tex "xhtml,3,next"
htlatex cug-html.tex "xhtml,3,next"

./cleanup.sh

