#!/bin/bash

set -e

# generate pdf documentation from cylc LaTeX source

usage() {
	echo "USAGE: [-f] $0"
    echo ' -f, force re-conversion of eps figures to PDF'
    echo "Run this script in the top level of your cylc repository"
}

[[ $# > 1 ]] && {
    usage
	exit 1
}

if [[ ! -f bin/cylc ]]; then
    echo "Run this script in the top level of your cylc repository"
    exit 1
fi

FORCE=false
if [[ $# == 1 ]]; then 
    if [[ $1 = '-f' ]]; then
        FORCE=true
    else
        usage
        exit 1
    fi
fi

# GENERATE USERGUIDE SYSTEM EXAMPLE CHAPTER CONTENTS -----------------
OUT=doc/example-system.tex
rm -f $OUT

DIR=systems/userguide

for PDEF in $DIR/taskdef/*.def; do 

    DEF=$( basename $PDEF ) 
    NAME=${DEF%.def}
    SCR=${NAME}.sh

    echo "\subsection{Task $NAME}" >> $OUT
    echo "\label{task$NAME}" >> $OUT
    echo "\subsubsection{Definition}" >> $OUT
    echo "\lstset{language=cylctaskdef}" >> $OUT
    echo "\lstinputlisting{../$DIR/taskdef/$DEF}" >> $OUT
    echo "\pagebreak" >> $OUT
    echo "\subsubsection{Implementation}" >> $OUT
    echo "\lstset{language=bash}" >> $OUT
    echo "\lstinputlisting{../$DIR/scripts/$SCR}" >> $OUT
    echo "\pagebreak" >> $OUT
    echo "" >> $OUT
done

echo "\subsection{Utility Scripts}" >> $OUT
echo "\label{utility}" >> $OUT
echo "\subsubsection{check-env.sh}" >> $OUT
echo "\lstset{language=bash}" >> $OUT
echo "\lstinputlisting{../$DIR/scripts/check-env.sh}" >> $OUT
echo "\pagebreak" >> $OUT
echo "" >> $OUT

#-----------------------------------------------------------------------


# GENERATE COMMAND REFERENCE CHAPTER CONTENTS -----------------------
rm -rf doc/command-usage; mkdir -p doc/command-usage
rm -f doc/commands.tex

for COMMAND in $(cylc commands); do 
    # direct command help into a txt file
    cylc $COMMAND --help > doc/command-usage/$COMMAND.txt
    # append to a latex file for inclusion in the userguide
    echo "\subsection{$COMMAND}" >> doc/commands.tex
    echo "\label{$COMMAND}" >> doc/commands.tex
    [[ -f doc/pre-command/$COMMAND.tex ]] && \
        echo "\input{pre-command/$COMMAND.tex}" >> doc/commands.tex
    echo "\lstinputlisting{command-usage/$COMMAND.txt}" >> doc/commands.tex
    [[ -f doc/post-command/$COMMAND.tex ]] && \
        echo "\input{post-command/$COMMAND.tex}" >> doc/commands.tex
    #echo "\pagebreak" >> doc/commands.tex
done
#-----------------------------------------------------------------------

#Comment-stripped taskdef files:
#perl -e 'while (<>) { if ( ! m/^\s*#/ && ! m/^\s*$/ ) { print }}' < \
#    sys/examples/userguide-1/system_config.py > doc/system_config.py.stripped
#perl -e 'while (<>) { if ( ! m/^\s*#/ && ! m/^\s*$/ ) { print }}' < \
#    sys/templates/full-template.def > doc/full-template.def.stripped


cd doc

cd inkscape-svg
for F in *.eps; do
    [[ ! -f ${F%eps}pdf ]] || $FORCE && {
        echo converting $F to PDF
        epstopdf $F
    }
done
cd ..

#pdflatex userguide.tex
latex userguide.tex
dvipdf userguide.dvi
