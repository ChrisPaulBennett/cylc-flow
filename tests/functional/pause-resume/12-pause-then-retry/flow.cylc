[meta]
    title = Test: run task - pause workflow - task job retry - resume workflow

[scheduler]
    [[events]]
        abort on stalled = True
        abort on inactivity = True
        inactivity = PT3M

[scheduling]
    [[graph]]
        R1 = """
            t-retry-able:start => t-pause
            t-submit-retry-able:submit => t-pause
        """

[runtime]
    [[t-pause]]
        script = """
            cylc pause "${CYLC_SUITE_NAME}"
            cylc__job__poll_grep_suite_log -F 'Command succeeded: pause'
            # Poll t-submit-retry-able, should return submit-fail
            cylc poll "${CYLC_SUITE_NAME}" 't-submit-retry-able'
            # Allow t-retry-able to continue
            rm -f "${CYLC_SUITE_RUN_DIR}/file"
            cylc__job__poll_grep_suite_log -F \
                '[t-retry-able.1] -running => waiting'
            cylc__job__poll_grep_suite_log -F \
                '[t-submit-retry-able.1] -submitted => waiting'
            # Resume the suite
            cylc play "${CYLC_SUITE_NAME}"
            cylc__job__poll_grep_suite_log -F \
                '[t-retry-able.1] -waiting => waiting (queued)'
            cylc__job__poll_grep_suite_log -F \
                '[t-submit-retry-able.1] -waiting => waiting (queued)'
        """
    [[t-retry-able]]
        script = """
            if ((CYLC_TASK_SUBMIT_NUMBER == 1)); then
                touch "${CYLC_SUITE_RUN_DIR}/file"
                while [[ -e "${CYLC_SUITE_RUN_DIR}/file" ]]; do
                    sleep 1
                done
                false
            fi
        """
        execution retry delays = PT5S
    [[t-submit-retry-able]]
        env-script = """
            if ((CYLC_TASK_SUBMIT_NUMBER == 1)); then
                trap '' EXIT
                exit
            fi
        """
        script = true
        submission retry delays = PT5S
