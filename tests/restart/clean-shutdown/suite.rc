#!jinja2
{%- if BATCH_SYS_NAME is defined and BATCH_SYS_NAME %}
{%- set HOST = environ['CYLC_TEST_BATCH_TASK_HOST'] %}
{%- set SITE_DIRECTIVES = environ['CYLC_TEST_BATCH_SITE_DIRECTIVES'] %}
{%- else %}
{%- set BATCH_SYS_NAME = none %}
{%- set HOST = "" %}
{%- set SITE_DIRECTIVES = "" %}
{%- endif %}
{%- set TEST_DIR = environ['TEST_DIR'] %}
[cylc]
    UTC mode = True
    [[event hooks]]
        timeout handler = shutdown_this_suite_hook
        timeout = PT3M
[scheduling]
    initial cycle time = 20130923T00
    final cycle time   = 20130923T00
    [[dependencies]]
        [[[R1]]]
            graph = """
                running_task:start => shutdown
                shutdown => output_states
                output_states & running_task => finish
            """
[runtime]
    [[running_task]]
        description = "Running task (runs during restart)"
        script = """
            sleep 40
        """
        {%- if BATCH_SYS_NAME %}
        [[[job submission]]]
            method = {{ BATCH_SYS_NAME }}
        [[[directives]]]
        {%- if BATCH_SYS_NAME == 'loadleveler' %}
            class            = serial
            job_type         = serial
            wall_clock_limit = '90,60'
        {%- elif BATCH_SYS_NAME == 'slurm' %}
            --time = 1
        {%- elif BATCH_SYS_NAME == 'pbs' %}
            -l walltime=60
        {%- endif %}
            {{ SITE_DIRECTIVES }}
        [[[remote]]]
            host = {{ HOST }}
        {%- endif %}
    [[OUTPUT]]
        script = """
            sleep 5
            sqlite3 $CYLC_SUITE_RUN_DIR/cylc-suite.db \
                "select name, cycle, submit_num, try_num, status
                 from task_states where name != '"$CYLC_TASK_NAME"'
                 order by name, cycle;" > {{ TEST_DIR }}/$OUTPUT_SUFFIX-db
            sed "/$CYLC_TASK_NAME/d" $CYLC_SUITE_RUN_DIR/state/state >{{ TEST_DIR }}/$OUTPUT_SUFFIX-state
        """
    [[shutdown]]
        description = "Force a shutdown of the suite"
        inherit = OUTPUT
        post-script = """
            cylc shutdown --interval=1 --max-polls=60 $CYLC_SUITE_REG_NAME &
            sleep 5
        """
        [[[environment]]]
            OUTPUT_SUFFIX=pre-restart
    [[output_states]]
        description = "Wait for the restart to complete, then output states"
        inherit = OUTPUT
        pre-script = """
            sleep 5
        """
        [[[environment]]]
            OUTPUT_SUFFIX=post-restart
    [[finish]]
        script = true
